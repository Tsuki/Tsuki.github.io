<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ツカツキ アリス</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.sukitsuki.com/"/>
  <updated>2018-09-24T09:46:11.072Z</updated>
  <id>https://blog.sukitsuki.com/</id>
  
  <author>
    <name>調月有栖</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>刪了Xcode後不能使用make等指令</title>
    <link href="https://blog.sukitsuki.com/2018/09/24/%E5%88%AA%E4%BA%86xcode%E5%BE%8C%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8make%E7%AD%89%E6%8C%87%E4%BB%A4/"/>
    <id>https://blog.sukitsuki.com/2018/09/24/刪了xcode後不能使用make等指令/</id>
    <published>2018-09-24T17:43:26.000Z</published>
    <updated>2018-09-24T09:46:11.072Z</updated>
    
    <content type="html"><![CDATA[<p>如果出現以下內容</p><blockquote><p>xcrun: error: active developer path (“/Applications/Xcode.app/Contents/Developer”) does not exist</p></blockquote><p>輸入 <code>sudo xcode-select -s /Library/Developer/CommandLineTools</code> 改回使用 CommandLineTools 的路徑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果出現以下內容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;xcrun: error: active developer path (“/Applications/Xcode.app/Contents/Developer”) does not exist&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端好用的模糊搜索工具</title>
    <link href="https://blog.sukitsuki.com/2018/09/21/%E5%89%8D%E7%AB%AF%E5%A5%BD%E7%94%A8%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/"/>
    <id>https://blog.sukitsuki.com/2018/09/21/前端好用的模糊搜索工具/</id>
    <published>2018-09-21T17:55:43.000Z</published>
    <updated>2018-09-21T10:25:31.993Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/krisk/fuse" target="_blank" rel="noopener">https://github.com/krisk/fuse</a></p><p><a href="http://fusejs.io/" target="_blank" rel="noopener">http://fusejs.io/</a></p><p>在處理表單的全文搜索，很常都要對不同欄位過濾，用了Fuse.js就可以少寫很多代碼。</p><p>Fuse.js 除了支持指定欄位/嵌套 Json，還支持比重搜索和 Bitap 算法提供一定近似匹配的功能。</p><p><a href="http://fusejs.io/#examples" target="_blank" rel="noopener">http://fusejs.io/#examples</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/krisk/fuse&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/krisk/fuse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fusejs.io
      
    
    </summary>
    
      <category term="Front-end" scheme="https://blog.sukitsuki.com/categories/Front-end/"/>
    
      <category term="JavaScript" scheme="https://blog.sukitsuki.com/categories/Front-end/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL語法中的過濾方法</title>
    <link href="https://blog.sukitsuki.com/2018/09/20/SQL%E8%AA%9E%E6%B3%95%E4%B8%AD%E7%9A%84%E9%81%8E%E6%BF%BE%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.sukitsuki.com/2018/09/20/SQL語法中的過濾方法/</id>
    <published>2018-09-20T20:17:49.000Z</published>
    <updated>2018-09-20T12:58:44.135Z</updated>
    
    <content type="html"><![CDATA[<p>在統計系統中，很常用到不同維度的分類和過澽，</p><p>比如按類加總/平均等等</p><table><thead><tr><th>Id</th><th>Gender</th><th>Salary</th><th>Country</th><th>Position</th><th>Status</th></tr></thead><tbody><tr><td>1</td><td>M</td><td>1000</td><td>China</td><td>Software</td><td>working</td></tr><tr><td>2</td><td>F</td><td>2000</td><td>USA</td><td>Software</td><td>holiday</td></tr><tr><td>3</td><td>M</td><td>5000</td><td>UK</td><td>Hardware</td><td>holiday</td></tr><tr><td>4</td><td>F</td><td>4000</td><td>Germany</td><td>Hardware</td><td>working</td></tr><tr><td>5</td><td>M</td><td>5000</td><td>USA</td><td>Admin</td><td>holiday</td></tr><tr><td>6</td><td>F</td><td>4000</td><td>Germany</td><td>Admin</td><td>holiday</td></tr></tbody></table><p>如果在上要一次過找出Admin和非Admin人員的平均Salary可以在 SQL中用 filter 或 case</p><p>PostgreSQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(salary) filter (<span class="keyword">where</span> <span class="keyword">position</span> = <span class="string">'admin'</span>)  <span class="keyword">as</span> admin_avg_salary,</span><br><span class="line">       <span class="keyword">avg</span>(salary) filter (<span class="keyword">where</span> <span class="keyword">position</span> &lt;&gt; <span class="string">'admin'</span>) <span class="keyword">as</span> non_admin_avg_salary</span><br><span class="line"><span class="keyword">from</span> raw_data</span><br></pre></td></tr></table></figure><p>MySQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(salary <span class="keyword">CASE</span></span><br><span class="line">                    <span class="keyword">WHEN</span> <span class="keyword">position</span> = <span class="string">'admin'</span> <span class="keyword">THEN</span> salary</span><br><span class="line">                    <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">as</span> admin_avg_salary,</span><br><span class="line">       <span class="keyword">avg</span>(salary <span class="keyword">CASE</span></span><br><span class="line">                    <span class="keyword">WHEN</span> <span class="keyword">position</span> &lt;&gt; <span class="string">'admin'</span> <span class="keyword">THEN</span> salary</span><br><span class="line">                    <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">as</span> non_admin_avg_salary</span><br><span class="line"><span class="keyword">from</span> raw_data</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在統計系統中，很常用到不同維度的分類和過澽，&lt;/p&gt;
&lt;p&gt;比如按類加總/平均等等&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Gender&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;th&gt;Country&lt;/th&gt;
&lt;th&gt;Posit
      
    
    </summary>
    
      <category term="SQL" scheme="https://blog.sukitsuki.com/categories/SQL/"/>
    
    
  </entry>
  
  <entry>
    <title>gorm兼容net.IP類</title>
    <link href="https://blog.sukitsuki.com/2018/08/29/gorm%E5%85%BC%E5%AE%B9net-IP%E9%A1%9E/"/>
    <id>https://blog.sukitsuki.com/2018/08/29/gorm兼容net-IP類/</id>
    <published>2018-08-29T12:04:38.000Z</published>
    <updated>2018-08-29T06:37:22.933Z</updated>
    
    <content type="html"><![CDATA[<p>首先 alias net.IP類到本地包，為之後實作方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> IP net.IP</span><br></pre></td></tr></table></figure><p>因為pg不能直接使用<code>[]byte</code>作為輸入，所以需要實作<code>Value()</code>令Gorm 能轉換成字串作為輸入。</p><p>先從自定義的 <code>IP</code> 類轉換回 <code>net.IP</code> 類，再用 <code>String()</code> 轉成字串。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a IP)</span> <span class="title">Value</span><span class="params">()</span> <span class="params">(driver.Value, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> net.IP(a).String(), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 別外，由於從pg 內讀取出來的是 <code>[]unit8</code> 類，內部數據是 ASIIC 碼，所以先轉換成 byte合併成 Array 再轉成 string.</p><p> 最後用 net 庫內的 ParseIP 方法 轉成 IP 類，之後再 cast 成自定義的 IP 類 返回。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br><span class="line" data-line-number="14"></span><br><span class="line" data-line-number="15"></span><br><span class="line" data-line-number="16"></span><br><span class="line" data-line-number="17"></span><br><span class="line" data-line-number="18"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> IP net.IP</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *IP)</span> <span class="title">Scan</span><span class="params">(src <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> x := src.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> []<span class="keyword">uint8</span>:</span><br><span class="line">*a = IP(net.ParseIP(<span class="keyword">string</span>(x)))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line">*a = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"pq: cannot convert %T to net.IP"</span>, src)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a IP)</span> <span class="title">Value</span><span class="params">()</span> <span class="params">(driver.Value, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> net.IP(a).String(), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先 alias net.IP類到本地包，為之後實作方法。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot; data-line-number=&quot;1&quot;
      
    
    </summary>
    
      <category term="Golang" scheme="https://blog.sukitsuki.com/categories/Golang/"/>
    
    
  </entry>
  
  <entry>
    <title>Diablo2打寶</title>
    <link href="https://blog.sukitsuki.com/2018/08/28/Diablo2%E6%89%93%E5%AF%B6/"/>
    <id>https://blog.sukitsuki.com/2018/08/28/Diablo2打寶/</id>
    <published>2018-08-28T00:11:54.000Z</published>
    <updated>2018-08-27T16:39:02.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="刷刷刷"><a href="#刷刷刷" class="headerlink" title="刷刷刷"></a>刷刷刷</h3><p>在飛了三天槌子後，今天（27號），終於打了喬丹之石，而且還是連出兩粒。第二粒在最後一把出的，別外還刷到接近頂值的馬拉的萬花筒（19抗性），實在太令人高興了。</p><p>這兩天把裝備提升，先刷到撒卡蘭姆使者，再刷到橡樹之心符文，在崔凡特己經可以穩定刷下去，但秘密母牛關還是有點壓力，而且刷起來不太效率。</p><p>在刷了好喬丹後，之後的喬丹之石就可以拿來開地表暗黑破壞神，玩了這麼多年還沒打過這隻呢。</p><p>之後去刷無限符文好還是謎團符文好呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;刷刷刷&quot;&gt;&lt;a href=&quot;#刷刷刷&quot; class=&quot;headerlink&quot; title=&quot;刷刷刷&quot;&gt;&lt;/a&gt;刷刷刷&lt;/h3&gt;&lt;p&gt;在飛了三天槌子後，今天（27號），終於打了喬丹之石，而且還是連出兩粒。第二粒在最後一把出的，別外還刷到接近頂值的馬拉的萬花筒（19抗
      
    
    </summary>
    
      <category term="遊戲" scheme="https://blog.sukitsuki.com/categories/%E9%81%8A%E6%88%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>暗黑破壞神</title>
    <link href="https://blog.sukitsuki.com/2018/08/24/Diablo2/"/>
    <id>https://blog.sukitsuki.com/2018/08/24/Diablo2/</id>
    <published>2018-08-24T20:18:10.000Z</published>
    <updated>2018-08-24T12:51:55.780Z</updated>
    
    <content type="html"><![CDATA[<h4 id="暗黑破壞神-2"><a href="#暗黑破壞神-2" class="headerlink" title="暗黑破壞神 2"></a>暗黑破壞神 2</h4><p>這個快二十多年的遊戲，想到不今時今日還有不少人在玩，在YouTube 上還有不少人上傳/直播打寶。現在官服還在維護，今天六月時天梯還有重置，而且還有不少玩家在線。</p><h4 id="私服"><a href="#私服" class="headerlink" title="私服"></a>私服</h4><p>現在D2除了正服外，還有不少私服，這些私服各有特色，有些是和正服一樣，有些是PVP服，還有倍率服。對於沒有時間或想重投D2的懷舊玩家來說，是不錯的選擇。</p><h4 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h4><p>當年第一個玩的角色，沒記錯應該是死靈法師，那時覺得帶著一大隊小弟，在單人模式上會輕鬆。現實上死靈法師在地獄難度之前，難易度是滿低的。</p><p>其次玩的是法師吧，法師的傳送是D2打寶的關建，除非有迷團甲。但迷團是相當高級的符文組，當年我連眼光都沒合成過，更別說迷團，那時拿的只是双精神，而且得用塔盾的精神。</p><p>現在重玩一下私服，就先練了個祝槌聖騎。雖然不算最好用的角式，但是是最易上手和最安全的角色。</p><h4 id="最後"><a href="#最後" class="headerlink" title="最後"></a>最後</h4><p>不小心把黑吉德賣了啊！！！！好想要SOJ啊！！！我還沒打過地表和三王啊！！！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;暗黑破壞神-2&quot;&gt;&lt;a href=&quot;#暗黑破壞神-2&quot; class=&quot;headerlink&quot; title=&quot;暗黑破壞神 2&quot;&gt;&lt;/a&gt;暗黑破壞神 2&lt;/h4&gt;&lt;p&gt;這個快二十多年的遊戲，想到不今時今日還有不少人在玩，在YouTube 上還有不少人上傳/直播打寶。現
      
    
    </summary>
    
      <category term="遊戲" scheme="https://blog.sukitsuki.com/categories/%E9%81%8A%E6%88%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker清理</title>
    <link href="https://blog.sukitsuki.com/2018/08/20/Docker%E6%B8%85%E7%90%86/"/>
    <id>https://blog.sukitsuki.com/2018/08/20/Docker清理/</id>
    <published>2018-08-20T20:01:56.000Z</published>
    <updated>2018-08-20T12:25:09.461Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看已使用空間"><a href="#查看已使用空間" class="headerlink" title="查看已使用空間"></a>查看已使用空間</h3><blockquote><p>docker system df</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br></pre></td><td class="code"><pre><span class="line">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class="line">Images              17                  15                  5.531GB             1.822GB (32%)</span><br><span class="line">Containers          20                  1                   251.6MB             212.2MB (84%)</span><br><span class="line">Local Volumes       42                  17                  1.09GB              174.5MB (16%)</span><br><span class="line">Build Cache         0                   0                   0B                  0B</span><br></pre></td></tr></table></figure><h3 id="清理空間"><a href="#清理空間" class="headerlink" title="清理空間"></a>清理空間</h3><p>Remove local volumes not used by at least one container - 沒有在使用的空間</p><blockquote><p>docker volume prune</p></blockquote><h3 id="清理容器"><a href="#清理容器" class="headerlink" title="清理容器"></a>清理容器</h3><p>Remove all stopped containers - 己停用的容器</p><blockquote><p>docker container prune</p></blockquote><h3 id="清理影像"><a href="#清理影像" class="headerlink" title="清理影像"></a>清理影像</h3><p>Remove dangling images - 沒有被tag的影像層</p><blockquote><p>docker image prune</p></blockquote><p>Remove images without at least one container associated - 沒有在使用的影像</p><blockquote><p>docker image prune -a</p></blockquote><h3 id="全面清理"><a href="#全面清理" class="headerlink" title="全面清理"></a>全面清理</h3><ul><li>Remove stopped containers - 己停用的容器</li><li>Remove networks not used by at least one container - 沒有容器連接的網絡</li><li>Remove dangling images - 沒有被tag</li><li>Remove build cache - 構建快取</li></ul><blockquote><p>docker system prune</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看已使用空間&quot;&gt;&lt;a href=&quot;#查看已使用空間&quot; class=&quot;headerlink&quot; title=&quot;查看已使用空間&quot;&gt;&lt;/a&gt;查看已使用空間&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;docker system df&lt;/p&gt;
&lt;/blockquote&gt;
&lt;f
      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>不如意事十常八九</title>
    <link href="https://blog.sukitsuki.com/2018/08/18/%E4%B8%8D%E5%A6%82%E6%84%8F%E4%BA%8B%E5%8D%81%E5%B8%B8%E5%85%AB%E4%B9%9D/"/>
    <id>https://blog.sukitsuki.com/2018/08/18/不如意事十常八九/</id>
    <published>2018-08-18T11:29:01.000Z</published>
    <updated>2018-08-18T13:01:30.769Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一個人"><a href="#一個人" class="headerlink" title="一個人"></a>一個人</h4><p>算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。</p><p>只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，當經歷過低潮才懂得之前的美好。從來沒有想過以前的生活是多麽的幸褔，在新的地方，新的環境下生活並不是一件簡單的事情。</p><p>這裹的治安水平並不算太高，搶手機的事情聽到不少。在這邊生活的地方基本上就是公司，宿舍兩點一線。而生活水平還算過得去，公司的伙食雖然不怎麼樣，但周邊還是有點能吃的餐館，基本上中、日、泰、韓的也有，價錢上比香港低一點但低不了不多。</p><p>周邊能去的地方，基本上就周日到超市逛逛，補充一下生活用品。房間沒有電腦，以前在房間玩電腦的習慣己經成為過去。雖然買了一台任天堂 Switch，不過大多是單人遊戲為主，但玩太多的也會生厭。</p><h4 id="醉"><a href="#醉" class="headerlink" title="醉"></a>醉</h4><p><img src="/2018/08/18/不如意事十常八九/photo_2018-08-18_20-15-26.jpg" alt=""></p><p>如果醉可以忘記，可以解決，可以逃避問題，那是多麼好的事情。</p><blockquote><p>期盼抹去的哀愁  卻更加的愁  。</p></blockquote><p>可是醉了之後，只有宿醉，頭痛，胃痛等問題等著。</p><blockquote><p>即使昏醉  大概不想安睡 </p><p>回去不回去  同樣掃不走空虛</p><p>長島內苦澀太多  然後強裝甜蜜快樂</p></blockquote><p>以前喝的時候，都是和身邊的人互相吐嘈、互相吐苦水、互相談生活，現在喝酒更多是為了消磨時間，為醉而喝。畢竟同事不是朋友，很多說話還是不可能拿出來說。</p><blockquote><p>和摯友抱擁交頭  說理想追求</p><p>靜靜地醉臥在門口 陪他作戰的朋友  各有各溜走</p></blockquote><h4 id="夢"><a href="#夢" class="headerlink" title="夢"></a>夢</h4><p><img src="/2018/08/18/不如意事十常八九/photo_2018-08-18_20-39-12.jpg" alt=""></p><blockquote><p>或者當日也曾有火種 </p><p>但擔心去路其實不通 </p><p>然後大計跌入四維國度失蹤</p><p>就此捲入既定軌跡中 </p><p>天天照例運行在虛空 </p><p>像循序漸進等夠鐘 </p><p>是否甘心永遠被動</p></blockquote><p>待續。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一個人&quot;&gt;&lt;a href=&quot;#一個人&quot; class=&quot;headerlink&quot; title=&quot;一個人&quot;&gt;&lt;/a&gt;一個人&lt;/h4&gt;&lt;p&gt;算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。&lt;/p&gt;
&lt;p&gt;只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，
      
    
    </summary>
    
      <category term="日記" scheme="https://blog.sukitsuki.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Golang 偽鑽石問題</title>
    <link href="https://blog.sukitsuki.com/2018/08/09/Golang-Embedding-trap/"/>
    <id>https://blog.sukitsuki.com/2018/08/09/Golang-Embedding-trap/</id>
    <published>2018-08-09T11:59:09.000Z</published>
    <updated>2018-08-09T12:31:50.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Golang-偽鑽石問題"><a href="#Golang-偽鑽石問題" class="headerlink" title="Golang 偽鑽石問題"></a>Golang 偽鑽石問題</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br><span class="line" data-line-number="14"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span>&#123; buffer <span class="keyword">int</span> &#125;</span><br><span class="line"><span class="keyword">type</span> Writer <span class="keyword">struct</span>&#123; buffer <span class="keyword">int</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">struct</span> &#123;</span><br><span class="line">Reader</span><br><span class="line">Writer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> rw ReadWriter</span><br><span class="line">    <span class="comment">// &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">"%+v"</span>, rw.buffer)</span><br><span class="line">    <span class="comment">// ambiguous selector rw.buffer</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 go 之中沒有實現真正的繼承，<code>rw.buffer</code> 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。</p><p>要取得 buffer 就需要指定 <code>rw.Reader.buffer</code> 或 <code>rw.Writer.buffer</code>.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br><span class="line" data-line-number="14"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Buffer <span class="keyword">struct</span>&#123; Buffer <span class="keyword">int</span> &#125;</span><br><span class="line"><span class="keyword">type</span> Reader <span class="keyword">struct</span>&#123; Buffer &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">struct</span> &#123;</span><br><span class="line">Buffer</span><br><span class="line">Reader</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> rw ReadWriter</span><br><span class="line">    <span class="comment">// &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">"%+v"</span>, rw.Buffer)</span><br><span class="line">    <span class="comment">// &#123;int:0&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這種寫法就沒有鑽石問題，因為淺層己經有 <code>rw.Buffer</code>，所以 <code></code>rw.Reader.buffer` 不會自動提升。</p><p>不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 <code>Buffer</code>。 所以這種情況下，還是盡量避免使用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Golang-偽鑽石問題&quot;&gt;&lt;a href=&quot;#Golang-偽鑽石問題&quot; class=&quot;headerlink&quot; title=&quot;Golang 偽鑽石問題&quot;&gt;&lt;/a&gt;Golang 偽鑽石問題&lt;/h1&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="Golang" scheme="https://blog.sukitsuki.com/categories/Golang/"/>
    
    
  </entry>
  
  <entry>
    <title>DNS故障轉移測試</title>
    <link href="https://blog.sukitsuki.com/2018/08/08/DNS-High-Availability/"/>
    <id>https://blog.sukitsuki.com/2018/08/08/DNS-High-Availability/</id>
    <published>2018-08-08T18:34:05.000Z</published>
    <updated>2018-08-08T12:10:20.356Z</updated>
    
    <content type="html"><![CDATA[<p>建立 lookback 地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig lo0 <span class="built_in">alias</span> 127.0.0.2 up</span><br><span class="line">sudo ifconfig lo0 <span class="built_in">alias</span> 127.0.0.3 up</span><br></pre></td></tr></table></figure><p>在 hosts 加入本地 dns 記錄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">127.0.0.2 localhost</span><br><span class="line">127.0.0.3 localhost</span><br></pre></td></tr></table></figure><p>在不同終端使用 netcat 建立本地監聽 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br></pre></td><td class="code"><pre><span class="line">nc -lk 127.0.0.1 8080</span><br><span class="line">nc -lk 127.0.0.2 8080</span><br><span class="line">nc -lk 127.0.0.3 8080</span><br></pre></td></tr></table></figure><p>測試傳送信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">nc localhost 8080</span><br></pre></td></tr></table></figure><p>嘗試關閉不同終端 以測試能不能故障轉移</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;建立 lookback 地址&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot; data-line-number=&quot;1&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>身為男高中生...讀後感</title>
    <link href="https://blog.sukitsuki.com/2018/08/06/%E8%BA%AB%E7%82%BA%E7%94%B7%E9%AB%98%E4%B8%AD%E7%94%9F-%E8%AE%80%E5%BE%8C%E6%84%9F/"/>
    <id>https://blog.sukitsuki.com/2018/08/06/身為男高中生-讀後感/</id>
    <published>2018-08-06T12:09:35.000Z</published>
    <updated>2018-08-18T13:01:30.765Z</updated>
    
    <content type="html"><![CDATA[<p>本書全名是《身為男高中生兼當紅輕小說作家的我，正被年紀比我小且從事聲優工作的女同學掐住脖子》(男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている。) 2014年時最長的小說作品名，一共51字呢。</p><p>從書名看起來很像一本校園戀愛故事的輕小說，但現實上並，不，是。這是一本科普文，這本書一共有三集（十集，偽）。</p><p>為什麼說這本書是科普文呢，因為這本說主要說的是輕小說作家出書的經歷和教學。</p><p>引子是主角的小說（作中作）在休學一年期間動漫化，在复學後被身為聲優的同學發現，之後每星期在前往東京的火車上被聊的故事。本中女主角為了引起男主角的注意，因此不斷向男主角提出話題，而話題就是男主角身為作家的工作內容。</p><p>第一，二集主要是在火車上互動，對話中提及大部分作家工作的內容，最後因為女主角被劇透了而掐住脖子www。看到這裹，書本己經提及大部分作家的工作內容，而且脖子也掐，應該完結吧。</p><p><img src="https://blog.sukitsuki.com/2018/08/06/身為男高中生-讀後感/photo_2018-08-06_12-05-57.jpg" alt=""></p><p>但三個月後又出了第三集，這集從本來的主角第一人稱，改為每章分拆成兩/四小章，男女主角梅花間竹的自白的敍事方式。這集一開始看上去像要回到校園生活故事，但其實還是作家的工作內容，其次是回收伏筆。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本書全名是《身為男高中生兼當紅輕小說作家的我，正被年紀比我小且從事聲優工作的女同學掐住脖子》(男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている。) 2014年時最長的小說作品名，一共51字呢。&lt;/p&gt;
&lt;p&gt;從書名看
      
    
    </summary>
    
      <category term="小說" scheme="https://blog.sukitsuki.com/categories/%E5%B0%8F%E8%AA%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>從Gogs遷移到Gitea</title>
    <link href="https://blog.sukitsuki.com/2018/08/03/From-gogs-to-gitea/"/>
    <id>https://blog.sukitsuki.com/2018/08/03/From-gogs-to-gitea/</id>
    <published>2018-08-03T18:18:01.000Z</published>
    <updated>2018-08-18T13:01:30.765Z</updated>
    
    <content type="html"><![CDATA[<p>Gogs 其實一個升級版本引起奇怪事情，於是順便遷移到 Gitea 上，在 Gitea 官方上建意由 0.9.X 或以前升級會比較方便。</p><p>但我升級到 0.11.X 以上出現問題，所在這記錄一下解決過程。</p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>事源於新版 Gogs 加了/修改了 git hook 的處理方法，兼容上出現一些問題。 在推送時出現 hook declined 並被 reject.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">! [remote rejected] master -&gt; master (pre-receive hook declined)</span><br></pre></td></tr></table></figure><p>可能的成因是這個hook不再生效或不再兼容了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在 /var/gogs/git/gogs-repositories/&lt;user&gt;/&lt;repo&gt;.git/hooks/pre-receiv</span></span><br><span class="line"><span class="comment">#找到以下內容</span></span><br><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="string">"/app/gogs/gogs"</span> hook --config=<span class="string">'/data/gogs/conf/app.ini'</span> pre-receive</span><br></pre></td></tr></table></figure><h1 id="遷移"><a href="#遷移" class="headerlink" title="遷移"></a>遷移</h1><p>Gitea 是 Gogs 在 0.9.X 上分支，並後續開發的版本。</p><h2 id="使用Docker-作為啟動"><a href="#使用Docker-作為啟動" class="headerlink" title="使用Docker 作為啟動"></a>使用Docker 作為啟動</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span><br><span class="line">docker stop gitea</span><br></pre></td></tr></table></figure><h2 id="遷移-git-倉庫和數據庫"><a href="#遷移-git-倉庫和數據庫" class="headerlink" title="遷移 git 倉庫和數據庫"></a>遷移 git 倉庫和數據庫</h2><p>複制倉庫到 Gitea</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br></pre></td><td class="code"><pre><span class="line">cp -r /var/gogs/git/gogs-repositories/* /var/lib/gitea/git/repositories/</span><br><span class="line"><span class="built_in">cd</span> /var/lib/gitea/gitea/conf</span><br><span class="line">mv app.ini app.ini.bak</span><br><span class="line">cp /var/gogs/gogs/conf/app.ini .</span><br><span class="line">vim app.ini</span><br></pre></td></tr></table></figure><p>複制數據庫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE gitea WITH TEMPLATE gogs OWNER &lt;username&gt;;</span><br></pre></td></tr></table></figure><p>修改 Gitea 參數</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[repository]</span></span><br><span class="line"><span class="attr">ROOT</span> = /data/git/repositories</span><br><span class="line"><span class="section">[server]</span></span><br><span class="line"><span class="attr">APP_DATA_PATH</span>    = /data/gitea</span><br><span class="line"><span class="attr">ROOT_URL</span>         = https://domain</span><br><span class="line"><span class="attr">DOMAIN</span>           = domain</span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">DB_TYPE</span>  = postgres</span><br><span class="line"><span class="attr">HOST</span>     = <span class="number">172.17</span>.<span class="number">0.1</span>:<span class="number">5432</span> #docker 到外部 postgres SQL</span><br><span class="line"><span class="attr">NAME</span>     = gitea</span><br><span class="line"><span class="attr">USER</span>     = USER</span><br><span class="line"><span class="attr">PASSWD</span>   = PASSWD</span><br><span class="line"><span class="attr">SSL_MODE</span> = disable</span><br></pre></td></tr></table></figure><h2 id="啟動並排錯"><a href="#啟動並排錯" class="headerlink" title="啟動並排錯"></a>啟動並排錯</h2><p>啟動 Docker </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">docker start gitea</span><br></pre></td></tr></table></figure><p>查看 log 是否順利（通常都不順利</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">less /var/lib/gitea/gitea/<span class="built_in">log</span>/gitea.log</span><br></pre></td></tr></table></figure><p> 如果看到收Migration出現問題（如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br><span class="line" data-line-number="14"></span><br><span class="line" data-line-number="15"></span><br><span class="line" data-line-number="16"></span><br><span class="line" data-line-number="17"></span><br><span class="line" data-line-number="18"></span><br><span class="line" data-line-number="19"></span><br><span class="line" data-line-number="20"></span><br><span class="line" data-line-number="21"></span><br><span class="line" data-line-number="22"></span><br><span class="line" data-line-number="23"></span><br><span class="line" data-line-number="24"></span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: empty step</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: empty step</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: empty step</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: remove index column from repo_unit table</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: remove organization watch repositories</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">17</span> [I] Migration: add deleted branches</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">18</span> [I] Migration: add repo indexer status</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">18</span> [I] Migration: adds time tracking and stopwatches</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">19</span> [I] Migration: migrate protected branch <span class="keyword">struct</span></span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">19</span> [I] Migration: add <span class="keyword">default</span> value to user prohibit_login</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">19</span> [I] Migration: add lfs lock table</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">20</span> [I] Migration: add reactions</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">20</span> [I] Migration: add pull request options</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">20</span> [I] Migration: add writable deploy keys</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">21</span> [I] Migration: remove is_owner, num_teams columns from org_user</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">21</span> [I] Migration: add closed_unix column <span class="keyword">for</span> issues</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">22</span> [I] Migration: add label descriptions</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">22</span> [I] Migration: add merge whitelist <span class="keyword">for</span> protected branches</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">23</span> [I] Migration: add is_fsck_enabled column <span class="keyword">for</span> repos</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">23</span> [I] Migration: add size column <span class="keyword">for</span> attachments</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">24</span> [I] Migration: add last used passcode column <span class="keyword">for</span> TOTP</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">24</span> [I] Migration: add language column <span class="keyword">for</span> user setting</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">25</span> [I] Migration: add multiple assignees</span><br><span class="line"><span class="number">2018</span>/<span class="number">08</span>/<span class="number">03</span> <span class="number">10</span>:<span class="number">58</span>:<span class="number">26</span> [...itea/routers/init.<span class="keyword">go</span>:<span class="number">60</span> GlobalInit()] [E] Failed to initialize ORM engine: migrate: do migrate: pq: column <span class="string">"ref"</span> does not exist</span><br></pre></td></tr></table></figure><p>出現欄位失蹤  <code>do migrate: pq: column &quot;ref&quot; does not exist</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br></pre></td><td class="code"><pre><span class="line"># 查看 Migration 的版本</span><br><span class="line">SELECT version FROM public.version t</span><br><span class="line"># 顯示的是 64,</span><br></pre></td></tr></table></figure><p>到 Github 上查看源碼 <a href="https://github.com/go-gitea/gitea/tree/master/models/migrations" target="_blank" rel="noopener">https://github.com/go-gitea/gitea/tree/master/models/migrations</a></p><p>找出 v64.go 並在 type Issue 或到要需要的 Ref</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE public.issue ADD ref text NULL</span><br></pre></td></tr></table></figure><p>再重啟 Docker 並繼續排查問題。</p><h2 id="清理錯誤的-Hook"><a href="#清理錯誤的-Hook" class="headerlink" title="清理錯誤的 Hook"></a>清理錯誤的 Hook</h2><p>再次推送時，會出現新的錯誤 </p><p><code>remote: ./hooks/post-receive.d/post-receive: line 2: /app/gogs/gogs: No such file or directory</code></p><p>使用以下指令清理不需要的 Gogs Hook</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/gitea/git/repositories</span><br><span class="line">grep -rHn gogs *|cut -d : -f1 | xargs rm</span><br></pre></td></tr></table></figure><p>到這步為止，之前推送失敗的倉庫都能推送上服務器</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Gogs 其實一個升級版本引起奇怪事情，於是順便遷移到 Gitea 上，在 Gitea 官方上建意由 0.9.X 或以前升級會比較方便。&lt;/p&gt;
&lt;p&gt;但我升級到 0.11.X 以上出現問題，所在這記錄一下解決過程。&lt;/p&gt;
&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因
      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>GPG-Key</title>
    <link href="https://blog.sukitsuki.com/2018/08/03/GPG-key/"/>
    <id>https://blog.sukitsuki.com/2018/08/03/GPG-key/</id>
    <published>2018-08-03T15:32:10.000Z</published>
    <updated>2018-08-04T10:03:24.706Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 開啟 GPG sign</span></span><br><span class="line">git config --global commit.gpgsign <span class="literal">true</span></span><br><span class="line"><span class="comment"># 指定 sign key</span></span><br><span class="line">git config --global user.signingkey &lt;key&gt;</span><br><span class="line"><span class="comment"># 顯示 公鈅列表</span></span><br><span class="line">gpg --list-keys --keyid-format LONG</span><br><span class="line"><span class="comment"># 顯示 私鈅列表</span></span><br><span class="line">gpg --list-secret-keys --keyid-format LONG</span><br><span class="line"><span class="comment"># 生成 Key</span></span><br><span class="line">gpg --full-generate-key</span><br><span class="line"><span class="comment"># 導出公鈅</span></span><br><span class="line">gpg --armor --<span class="built_in">export</span> &lt;key&gt;</span><br><span class="line"><span class="comment"># 導出密鈅</span></span><br><span class="line">gpg --armor --<span class="built_in">export</span>-secret-keys &lt;key&gt;</span><br><span class="line"><span class="comment"># 導出子密鈅</span></span><br><span class="line">gpg --armor --<span class="built_in">export</span>-secret-subkeys &lt;key&gt;</span><br><span class="line"><span class="comment"># 重啟 gpg agent</span></span><br><span class="line">gpg-connect-agent reloadagent /<span class="built_in">bye</span></span><br><span class="line"><span class="comment"># 殺掉 gpg agent</span></span><br><span class="line">gpgconf --<span class="built_in">kill</span> gpg-agent</span><br><span class="line"><span class="comment"># 修改 gpg agent 參數</span></span><br><span class="line">vim ~/.gnupg/gpg-agent.conf</span><br><span class="line">max-cache-ttl 60480000</span><br><span class="line">default-cache-ttl 60480000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>Python腳本調整歌詞開始位</title>
    <link href="https://blog.sukitsuki.com/2018/08/01/lrc-offset/"/>
    <id>https://blog.sukitsuki.com/2018/08/01/lrc-offset/</id>
    <published>2018-08-01T19:18:49.000Z</published>
    <updated>2018-08-18T13:01:30.765Z</updated>
    
    <content type="html"><![CDATA[<p>#一個 Python 腳本，用作全局調整歌詞提前量/開始位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line" data-line-number="1"></span><br><span class="line" data-line-number="2"></span><br><span class="line" data-line-number="3"></span><br><span class="line" data-line-number="4"></span><br><span class="line" data-line-number="5"></span><br><span class="line" data-line-number="6"></span><br><span class="line" data-line-number="7"></span><br><span class="line" data-line-number="8"></span><br><span class="line" data-line-number="9"></span><br><span class="line" data-line-number="10"></span><br><span class="line" data-line-number="11"></span><br><span class="line" data-line-number="12"></span><br><span class="line" data-line-number="13"></span><br><span class="line" data-line-number="14"></span><br><span class="line" data-line-number="15"></span><br><span class="line" data-line-number="16"></span><br><span class="line" data-line-number="17"></span><br><span class="line" data-line-number="18"></span><br><span class="line" data-line-number="19"></span><br><span class="line" data-line-number="20"></span><br><span class="line" data-line-number="21"></span><br><span class="line" data-line-number="22"></span><br><span class="line" data-line-number="23"></span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date, datetime, time, timedelta</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(filename: str, offset: int)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">    thetime = re.compile(<span class="string">r"\[([0-9]&#123;2&#125;):([0-9]&#123;2&#125;)\.([0-9]&#123;2&#125;)?\](.+)"</span>)</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'r+'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file.readlines():</span><br><span class="line">            min_sec_str = thetime.search(line)</span><br><span class="line">            <span class="keyword">if</span> min_sec_str:</span><br><span class="line">                m, s, ms, lrc = min_sec_str.group(<span class="number">1</span>), min_sec_str.group(<span class="number">2</span>), min_sec_str.group(<span class="number">3</span>), min_sec_str.group(<span class="number">4</span>)</span><br><span class="line">                t = datetime.combine(date.today(), time(<span class="number">0</span>, int(m), int(s), int(ms))) + timedelta(milliseconds=offset)</span><br><span class="line">                print(<span class="string">f'[<span class="subst">&#123;t.minute:<span class="number">02</span>&#125;</span>:<span class="subst">&#123;t.second:<span class="number">02</span>&#125;</span>.<span class="subst">&#123;t.microsecond:<span class="number">02</span>&#125;</span>]<span class="subst">&#123;lrc&#125;</span>'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(line)</span><br><span class="line">    file.close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">raise</span> SyntaxError(<span class="string">"Insufficient arguments."</span>)</span><br><span class="line">    main(sys.argv[<span class="number">1</span>], int(sys.argv[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>先用正則找出歌詞位置，再提取出分，秒，微秒和歌詞，</p><p>然後轉換成 Python 的時間類並調整時間，最後打印出來。</p><h1 id="正則測試網站"><a href="#正則測試網站" class="headerlink" title="正則測試網站"></a>正則測試網站</h1><p><a href="https://regex101.com/" target="_blank" rel="noopener">https://regex101.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#一個 Python 腳本，用作全局調整歌詞提前量/開始位置&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot; data-line-numbe
      
    
    </summary>
    
      <category term="Python" scheme="https://blog.sukitsuki.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac 虛擬化</title>
    <link href="https://blog.sukitsuki.com/2018/08/01/Mac-Hypervisor/"/>
    <id>https://blog.sukitsuki.com/2018/08/01/Mac-Hypervisor/</id>
    <published>2018-08-01T11:53:59.000Z</published>
    <updated>2018-08-18T13:01:30.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac-虛擬化管理"><a href="#Mac-虛擬化管理" class="headerlink" title="Mac 虛擬化管理"></a>Mac 虛擬化管理</h1><h2 id="虛擬化"><a href="#虛擬化" class="headerlink" title="虛擬化"></a>虛擬化</h2><p>在 Linux 世界中，要實現進程/資源分離並不是一件非常困難的事情，從最早的 chroot, 到後來 Google 提出的 cgroups (Control groups), 到後來實用化的 LXC ，或者是系統級虛擬化 KVM,XEN 等。</p><p>相比起 Linux 的 cgroups (2006年), FreeBSD 在更早之前(2000年),就提出過相似的沙箱虛擬化技術 jail, 並且提供不少實用功能，比如打包轉移，虛擬網絡監控等功能。</p><h3 id="bhyve-xhyve"><a href="#bhyve-xhyve" class="headerlink" title="bhyve/xhyve"></a>bhyve/xhyve</h3><p>雖然 jail 能提供像 Docker 的功能，但 Docker 的社群相比 Unix/BSD 社群人數更多，支援也更成熟。為了在Unix上便用 Docker, 但Docker 是基於 Linux 內核開發，要提供內核就只能便用 Virtual Box 等方案，直到 bhyve 的出現（續命。 bhyve 的出現令 Unix 拥有低成本，高效和原生的虛擬化體驗，使用起來更流暢。</p><p>作為師出同門的 Mac 要使用這項技術，因此就出現從BSD bhyve 移植而來的 xhyve. (Mac 內核是從 BSD 原碼上分支而來)</p><h3 id="HyperKit"><a href="#HyperKit" class="headerlink" title="HyperKit"></a>HyperKit</h3><p>HyperKit 是Docker 公司基於 b/xhyve 開發的工具庫，用作提升擴屏性和兼容性的解決方案。現時新版本的 Docker for Mac 就內置了 HyperKit.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mac-虛擬化管理&quot;&gt;&lt;a href=&quot;#Mac-虛擬化管理&quot; class=&quot;headerlink&quot; title=&quot;Mac 虛擬化管理&quot;&gt;&lt;/a&gt;Mac 虛擬化管理&lt;/h1&gt;&lt;h2 id=&quot;虛擬化&quot;&gt;&lt;a href=&quot;#虛擬化&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>ServerUpdate</title>
    <link href="https://blog.sukitsuki.com/2018/07/25/ServerUpdate/"/>
    <id>https://blog.sukitsuki.com/2018/07/25/ServerUpdate/</id>
    <published>2018-07-25T14:11:07.000Z</published>
    <updated>2018-07-25T11:03:21.723Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服務器更新"><a href="#服務器更新" class="headerlink" title="服務器更新"></a>服務器更新</h1><p>今天把Debian滾到 9.5 內核升到 4.9, 因為Linux 4.9內核內建了tcp_bbr 算法。</p><p>這算法對高延遲，高掉包的網絡有較大的提升</p><p>不過香港的掉包和延遲不算嚴重，更新後提升不大</p><h2 id="配置kernal-參數"><a href="#配置kernal-參數" class="headerlink" title="配置kernal 參數"></a>配置kernal 參數</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 增加以下兩條配置</span></span><br><span class="line"><span class="comment"># net.core.default_qdisc=fq</span></span><br><span class="line"><span class="comment"># net.ipv4.tcp_congestion_control=bbr</span></span><br></pre></td></tr></table></figure><h2 id="刷新內核配置"><a href="#刷新內核配置" class="headerlink" title="刷新內核配置"></a>刷新內核配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure><h2 id="重啟和測試配置"><a href="#重啟和測試配置" class="headerlink" title="重啟和測試配置"></a>重啟和測試配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br><span class="line">$ sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"><span class="comment"># 顯示結果中有bbr</span></span><br><span class="line"><span class="comment"># net.ipv4.tcp_available_congestion_control = bbr cubic reno</span></span><br></pre></td></tr></table></figure><p>測試用指令 <code>wget -qO- bench.sh | bash</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------------------------------------------</span><br><span class="line">CPU model            : AMD Phenom(tm) II X6 1055T Processor</span><br><span class="line">Number of cores      : 6</span><br><span class="line">CPU frequency        : 2812.247 MHz</span><br><span class="line">Total size of Disk   : 95.0 GB (38.0 GB Used)</span><br><span class="line">Total amount of Mem  : 491 MB (84 MB Used)</span><br><span class="line">Total amount of Swap : 4090 MB (0 MB Used)</span><br><span class="line">System uptime        : 0 days, 0 hour 5 min</span><br><span class="line">Load average         : 0.06, 0.08, 0.04</span><br><span class="line">OS                   : Debian GNU/Linux 9</span><br><span class="line">Arch                 : x86_64 (64 Bit)</span><br><span class="line">Kernel               : 4.9.0-6-amd64</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">I/O speed(1st run)   : 93.1 MB/s</span><br><span class="line">I/O speed(2nd run)   : 93.5 MB/s</span><br><span class="line">I/O speed(3rd run)   : 97.0 MB/s</span><br><span class="line">Average I/O speed    : 94.5 MB/s</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Node Name                       IPv4 address            Download Speed</span><br><span class="line">CacheFly                        204.93.150.152          5.14MB/s</span><br><span class="line">Linode, Tokyo, JP               106.187.96.148          1.12MB/s</span><br><span class="line">Linode, Singapore, SG           139.162.23.4            1.29MB/s</span><br><span class="line">Linode, London, UK              176.58.107.39           578KB/s</span><br><span class="line">Linode, Frankfurt, DE           139.162.130.8           546KB/s</span><br><span class="line">Linode, Fremont, CA             50.116.14.9             634KB/s</span><br><span class="line">Softlayer, Dallas, TX           173.192.68.18           1.70MB/s</span><br><span class="line">Softlayer, Seattle, WA          67.228.112.250          2.06MB/s</span><br><span class="line">Softlayer, Frankfurt, DE        159.122.69.4            237KB/s</span><br><span class="line">Softlayer, Singapore, SG        119.81.28.170           1.45MB/s</span><br><span class="line">Softlayer, HongKong, CN         119.81.130.170          8.97MB/s</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">SpeedTest</span><br><span class="line">Hosted by STC (Hong Kong) : 5.976 ms</span><br><span class="line">Testing download </span><br><span class="line">Download: 289.92 Mbit/s</span><br><span class="line">Testing upload </span><br><span class="line">Upload: 52.48 Mbit/s</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;服務器更新&quot;&gt;&lt;a href=&quot;#服務器更新&quot; class=&quot;headerlink&quot; title=&quot;服務器更新&quot;&gt;&lt;/a&gt;服務器更新&lt;/h1&gt;&lt;p&gt;今天把Debian滾到 9.5 內核升到 4.9, 因為Linux 4.9內核內建了tcp_bbr 算法。&lt;/p&gt;

      
    
    </summary>
    
      <category term="Ops" scheme="https://blog.sukitsuki.com/categories/Ops/"/>
    
    
  </entry>
  
  <entry>
    <title>Python爬蟲</title>
    <link href="https://blog.sukitsuki.com/2018/07/18/Python%E7%88%AC%E8%9F%B2/"/>
    <id>https://blog.sukitsuki.com/2018/07/18/Python爬蟲/</id>
    <published>2018-07-18T19:24:50.000Z</published>
    <updated>2018-07-18T12:49:24.377Z</updated>
    
    <content type="html"><![CDATA[<p>簡易Python 爬蟲</p><p>使用request提取網頁，再用bs4分析取得到html， 最後用urllib保存文件</p><p>requests預設encoding很大機會是iso-8859-1</p><p>所以在提取text之前需要修改成 <code>html.encoding = &#39;UTF-8&#39;</code></p><p><code>range(1, int(numbers))</code> 是返會 <code>[1.....numbers-1]</code>  所以要使用 <code>range(1, int(numbers)+1)</code></p><p>Python 沒有 <code>+=</code> 的寫法，合併Array只能 <code>array = array + [....]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">author = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_epub</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'#epub'</span> <span class="keyword">in</span> url[<span class="string">'href'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    booklist = []</span><br><span class="line">    URL = <span class="string">f"https://tw.ixdzs.com/author/<span class="subst">&#123;author&#125;</span>"</span></span><br><span class="line">    html = requests.get(URL)</span><br><span class="line">    html.encoding = <span class="string">'UTF-8'</span></span><br><span class="line">    soup = BeautifulSoup(html.text, <span class="string">'lxml'</span>)</span><br><span class="line">    number = soup.find_all(<span class="string">'a'</span>, title=<span class="string">"最後一頁"</span>)[<span class="number">0</span>]</span><br><span class="line">    numbers = re.search(<span class="string">r'page=(\d+)$'</span>, number[<span class="string">'href'</span>]).group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> list(range(<span class="number">1</span>, int(numbers)+<span class="number">1</span>)):</span><br><span class="line">        URL = <span class="string">f"https://tw.ixdzs.com/author/<span class="subst">&#123;author&#125;</span>?page=<span class="subst">&#123;num&#125;</span>"</span></span><br><span class="line">        html = requests.get(URL)</span><br><span class="line">        html.encoding = <span class="string">'UTF-8'</span></span><br><span class="line">        soup = BeautifulSoup(html.text, <span class="string">'lxml'</span>)</span><br><span class="line">        booklist = booklist + soup.find_all(<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line">    urllist = filter(is_epub, booklist)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(author):</span><br><span class="line">        os.makedirs(author)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> tqdm(list(urllist)):</span><br><span class="line">        book_id = re.search(<span class="string">r'/d/\d+/(\d+)/#epub_down'</span>, url[<span class="string">'href'</span>]).group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            title = re.search(<span class="string">r'(.*)epub下載'</span>, url[<span class="string">'title'</span>]).group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(url[<span class="string">'title'</span>])</span><br><span class="line">            title = url[<span class="string">'title'</span>]</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">f"<span class="subst">&#123;author&#125;</span>/<span class="subst">&#123;title&#125;</span>.epub"</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        urllib.request.urlretrieve(</span><br><span class="line">            <span class="string">f'https://tw.ixdzs.com/down/<span class="subst">&#123;book_id&#125;</span>_4'</span>, <span class="string">f'<span class="subst">&#123;author&#125;</span>/<span class="subst">&#123;title&#125;</span>.epub'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(sys.argv)</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">raise</span> SyntaxError(<span class="string">"Insufficient arguments."</span>)</span><br><span class="line">    author = sys.argv[<span class="number">1</span>]</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;簡易Python 爬蟲&lt;/p&gt;
&lt;p&gt;使用request提取網頁，再用bs4分析取得到html， 最後用urllib保存文件&lt;/p&gt;
&lt;p&gt;requests預設encoding很大機會是iso-8859-1&lt;/p&gt;
&lt;p&gt;所以在提取text之前需要修改成 &lt;code&gt;htm
      
    
    </summary>
    
      <category term="Python" scheme="https://blog.sukitsuki.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Food</title>
    <link href="https://blog.sukitsuki.com/2018/07/18/Food/"/>
    <id>https://blog.sukitsuki.com/2018/07/18/Food/</id>
    <published>2018-07-18T10:03:05.000Z</published>
    <updated>2018-07-18T03:27:43.205Z</updated>
    
    <content type="html"><![CDATA[<p>低澱粉、高蛋白飲食</p><p>一般來說，飲食中的醣類約占每日總熱量的50~60%，以提供人體主要的能量。醣類進入身體，經消化後產生「葡萄糖」。「葡萄糖」是神經系統、肌肉細胞、紅血球等主要仰賴的能量。</p><p>「高蛋白飲食」通常伴隨嚴格的限制澱粉，背後牽涉複雜的生化代謝的改變。多數研究顯示，短期「高蛋白飲食」確實有助於減重。</p><p>不是不是所有人都適合低醣的「高蛋白飲食」。美國心臟協會在2009年提出警告：長期的高蛋白飲食，包括可能增加心血管疾病及骨質疏鬆症的患病風險，且易使尿酸值提高，惡化痛風症狀。</p><p>減少精緻澱粉類的分量，並適度增加植物性蛋白質及非紅肉內臟的動物蛋白質，而非採取激進方式如嚴格限制澱粉，卻對蛋白質攝取不設上限。</p><p>GI值又稱升糖指數，指的是食物吃進體內後，造成血糖上升速度的快慢。</p><p><img src="https://blog.sukitsuki.com/2018/07/18/Food/givstime.jpg" alt="GI對血糖的影響"></p><ul><li>不易累積體脂肪。</li><li>不易感到疲倦、昏昏欲睡。</li><li>飽足感時間延長，比較不容易餓。</li><li>降低三酸甘油酯、總膽固醇及壞膽固醇。</li><li>容易控管血糖值，降低心血管疾病及糖尿病併發症風險。</li></ul><p>大部分蔬菜、含糖量低的水果都屬於低GI食物，除了能增加飽足感，也能避免吃下過多的澱粉類食物。</p><p>避免烹調時間過長、食物過於軟爛，就能延緩食物消化的速度，血糖也不至於上升太快，如白米飯會比白粥的GI值低。</p><p>別外，低 GI 不等於低熱量，像是花生、炸豆腐、腰果、培根、火腿、香蕉、芒果、奶油、奶油起士等也都屬於低 GI 食物，但熱量都不低。</p><table><thead><tr><th></th><th><strong>食物的升糖指數 (GI)</strong></th><th></th><th></th></tr></thead><tbody><tr><td><strong>食物種類</strong></td><td><strong>低GI (55或以)</strong></td><td><strong>中GI (GI 56-69)</strong></td><td><strong>高GI (70或以上)</strong></td></tr><tr><td>米飯</td><td>糙米、黑米</td><td>紅米飯、糙米飯</td><td>糯米飯、白飯</td></tr><tr><td>粉麵</td><td>粉絲、意粉、通心粉、全蛋麵</td><td>烏冬</td><td>普通小麥麵條</td></tr><tr><td>麵包</td><td>裸麥粒麵包</td><td>牛角包</td><td>白麵包、饅頭</td></tr><tr><td>早餐穀物</td><td>燕麥糠</td><td></td><td>粟米片</td></tr><tr><td>根莖類</td><td>粟米、魔芋</td><td>蕃薯、連皮焗薯</td><td>薯蓉、南瓜</td></tr><tr><td>糖類</td><td>果糖、乳糖</td><td>蔗糖、蜂蜜</td><td>葡萄糖、砂糖、麥芽糖</td></tr><tr><td>奶類</td><td>脫脂/低脂奶</td><td></td><td></td></tr><tr><td>生果類</td><td>橙、蘋果、雪梨、提子、奇異果、沙田柚、士多啤梨</td><td>蜜瓜、香蕉、木瓜、芒果</td><td>西瓜、茘枝、龍眼</td></tr><tr><td>豆類</td><td>黃豆、綠豆、眉豆、紅腰豆、扁豆類</td><td>焗豆</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;低澱粉、高蛋白飲食&lt;/p&gt;
&lt;p&gt;一般來說，飲食中的醣類約占每日總熱量的50~60%，以提供人體主要的能量。醣類進入身體，經消化後產生「葡萄糖」。「葡萄糖」是神經系統、肌肉細胞、紅血球等主要仰賴的能量。&lt;/p&gt;
&lt;p&gt;「高蛋白飲食」通常伴隨嚴格的限制澱粉，背後牽涉複雜的生化
      
    
    </summary>
    
      <category term="日記" scheme="https://blog.sukitsuki.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Sick</title>
    <link href="https://blog.sukitsuki.com/2018/07/16/sick/"/>
    <id>https://blog.sukitsuki.com/2018/07/16/sick/</id>
    <published>2018-07-16T19:00:04.000Z</published>
    <updated>2018-07-16T12:14:29.642Z</updated>
    
    <content type="html"><![CDATA[<p>生病是很痛苦，而一個人在外生病，沒有人幫助更痛苦。</p><p>腸胃炎引起的肚子绞痛實在太難受了。得了最嚴重的腸胃炎還付帶發燒和關接肌肉痛。</p><p>第一天發病時在半夜，還好想起有阿士匹靈，吃了120mg的劑量才睡著。</p><p>第二天一早跑去醫院看醫生了，注了四瓶藥水，還被開了抗生素的藥。</p><p>起因可能是因為牛奶吧，紙包的牛奶太易破損，而且牛奶又不好保質。</p><p>別外，再次喝起牛奶，還是覺得討厭牛奶，上一次飲純牛奶己經好幾年前了。</p><p>這次事件還好有帶阿士匹靈在身邊，阿士匹靈簡真是萬能應急藥，不過也不能太依懶。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;生病是很痛苦，而一個人在外生病，沒有人幫助更痛苦。&lt;/p&gt;
&lt;p&gt;腸胃炎引起的肚子绞痛實在太難受了。得了最嚴重的腸胃炎還付帶發燒和關接肌肉痛。&lt;/p&gt;
&lt;p&gt;第一天發病時在半夜，還好想起有阿士匹靈，吃了120mg的劑量才睡著。&lt;/p&gt;
&lt;p&gt;第二天一早跑去醫院看醫生了，注了
      
    
    </summary>
    
      <category term="日記" scheme="https://blog.sukitsuki.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
  </entry>
  
  <entry>
    <title>調酒-Cointreau</title>
    <link href="https://blog.sukitsuki.com/2018/07/06/Cointreau/"/>
    <id>https://blog.sukitsuki.com/2018/07/06/Cointreau/</id>
    <published>2018-07-06T13:53:47.000Z</published>
    <updated>2018-07-06T08:04:35.628Z</updated>
    
    <content type="html"><![CDATA[<p>Cointreau 又名君度橙酒</p><p>這是一款很常用到的Triple sec (三蒸??), 但很多酒譜都是指名要君度而不是 Triple sec.</p><p>不同基酒配君度酒可以調成不同酒，比如</p><p>Vodka：雪國，神風，Balalaika</p><p>Gin：White Lady,  Jasmine</p><p>Tequila：Margarita</p><p>接下來介紹兩款基於琴酒和君度調成調酒：</p><p>White Lady, Jasmine</p><blockquote><p>White Lady</p></blockquote><p>酒譜：</p><p>60ml Gin </p><p>15ml Cointreau</p><p>30ml Lime Juice</p><p>看口味加入小時糖水或蛋白</p><p>加入蛋白可以令口感變的順滑，但整體難度會上升很多，因此不建浪費材料。</p><blockquote><p>Jasmine</p></blockquote><p>酒譜：</p><p>45ml Gin</p><p>25ml Cointreau</p><p>15ml Campari</p><p>15ml Lemon Juice</p><blockquote><p>糖水的制作方法</p></blockquote><p>先準備一分水，一分砂糖，混合後加到鍋裹用慢火加熱。</p><p>邊搞拌，邊等水燒到接近沸騰，之後關火把糖水放到玻璃瓶裹放冰箱保存。</p><p>第一次制作可以先制作300ml左右，因為糖水保存期不算太久，</p><p>而且制作不算難，需要時再造也不麻煩。</p><blockquote><p>長飲/短飲</p></blockquote><p>長飲最好在十分鐘內或冰溶化前飲完。</p><p>短飲須要在三口內喝內。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cointreau 又名君度橙酒&lt;/p&gt;
&lt;p&gt;這是一款很常用到的Triple sec (三蒸??), 但很多酒譜都是指名要君度而不是 Triple sec.&lt;/p&gt;
&lt;p&gt;不同基酒配君度酒可以調成不同酒，比如&lt;/p&gt;
&lt;p&gt;Vodka：雪國，神風，Balalaika&lt;/p
      
    
    </summary>
    
      <category term="調酒" scheme="https://blog.sukitsuki.com/categories/%E8%AA%BF%E9%85%92/"/>
    
    
      <category term="White Lady" scheme="https://blog.sukitsuki.com/tags/White-Lady/"/>
    
      <category term="Yukiguni" scheme="https://blog.sukitsuki.com/tags/Yukiguni/"/>
    
      <category term="Cointreau" scheme="https://blog.sukitsuki.com/tags/Cointreau/"/>
    
  </entry>
  
</feed>
