{"title":"Angular/Element(Web Components)","slug":"Angular-Element-Web-Components","date":"2018-12-19T17:39:31.000Z","updated":"2018-12-19T13:16:13.455Z","comments":true,"path":"api/articles/2018/12/19/Angular-Element-Web-Components.json","photos":["/2018/12/19/Angular-Element-Web-Components/cjps7ommi000j4u8hgkgz78k4.720p.jpg"],"link":"","excerpt":"","content":"<h2 id=\"Web-Components\"><a href=\"#Web-Components\" class=\"headerlink\" title=\"Web Components\"></a>Web Components</h2><p>Web Components 是最新的 HTML 技術，這項技術可以令瀏覽器支持原生的自定組件，這種做法就可以減輕對前端的依賴/需求。</p><p>別外，使用 web components 可以代替組件在網頁上 JIT 編譯，減小瀏覽器的壓力。</p><h2 id=\"在Angular-上使用-Web-Component\"><a href=\"#在Angular-上使用-Web-Component\" class=\"headerlink\" title=\"在Angular 上使用 Web Component\"></a>在Angular 上使用 Web Component</h2><h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><p>首先在項目目錄下安裝 <code>@angular/elements</code></p><p>之後把 <code>document-register-element</code> 更新</p><p>別外，為了支持舊版本的瀏覽器，需要加入兼容器 (polyfill) <code>@webcomponents/webcomponentsjs</code></p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng add @angular/elements</span><br><span class=\"line\">yarn add document-register-element</span><br><span class=\"line\">yarn add @webcomponents/webcomponentsjs</span><br></pre></td></tr></table></figure><p>之後在 <code>polyfills.ts</code> 載入</p><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * APPLICATION IMPORTS</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">import '@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js';</span><br></pre></td></tr></table></figure><p>如果有使用 <code>ngx-build-plus</code> 和 <code>html-webpack-plugin</code> , 需要把 html-webpack-plugin 更新到 <code>4.0.0</code>，因為</p><p><a href=\"https://github.com/angular/angular-cli/issues/13223\" target=\"_blank\" rel=\"noopener\">https://github.com/angular/angular-cli/issues/13223</a></p><p>使用 <code>custom-elements-es5-adapter</code> 是因為 Angular/Elements 不能在 <code>tsconfig.json</code> 降級到 ES5 來支持 IE/Edge，必須使用 ES2015 不然 Chrome 會報錯，所以使用這個庫來達成兼容。</p><p>使用 <code>webcomponents-bundle.js</code> 是為了兼容不支持 web components 的瀏覽器，別外一個是使用 <code>webcomponents-loader.js</code> 進行懶加庫所需要的庫。</p><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>由於 <a href=\"https://github.com/webcomponents/webcomponentsjs/issues/909\" target=\"_blank\" rel=\"noopener\">https://github.com/webcomponents/webcomponentsjs/issues/909</a> 不能在 polyfill.ts 裹加入</p><p><code>import webcomponents-bundle.js</code>，所以需要在 <code>angular.json</code> 的 script 載入。</p><p>如果要使用 <code>webcomponents-loader.js</code> 需要在 <code>angular.json</code> 的 asset 下加入 webcomponentsjs 的bundle 到 asset。</p><p>因為 load 是使用 <code>document.querySelector(&#39;script[src*=&quot;webcomponents-loader.js&quot;]&#39;)</code> 再進行 replace。</p><p>使用時， <code>angular.json</code> 需要在把 script 顯式加入</p><p><code>&quot;bundleName&quot;: &quot;webcomponents-loader&quot;,&quot;lazy&quot;: true</code></p><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"assets\": [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"glob\"</span>: <span class=\"string\">\"**/*\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"input\"</span>: <span class=\"string\">\"node_modules/@webcomponents/webcomponentsjs/bundles\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"output\"</span>: <span class=\"string\">\"./bundles\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"src/favicon.ico\",</span><br><span class=\"line\">  <span class=\"string\">\"src/assets\"</span></span><br><span class=\"line\">],</span><br><span class=\"line\">....</span><br><span class=\"line\">\"scripts\": [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"input\"</span>: <span class=\"string\">\"node_modules/document-register-element/build/document-register-element.js\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  \t<span class=\"attr\">\"input\"</span>: <span class=\"string\">\"node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js\"</span>,      </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"input\"</span>: <span class=\"string\">\"node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"bundleName\"</span>: <span class=\"string\">\"webcomponents-loader\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"lazy\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure><h2 id=\"組件\"><a href=\"#組件\" class=\"headerlink\" title=\"組件\"></a>組件</h2><h3 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在需要 web components 的組件下加入或修改 <code>encapsulation: ViewEncapsulation.ShadowDom</code>。</p><p>Ps: <code>ViewEncapsulation.Native</code> 在 Angular 6.1.0 己經被標記為棄用，</p><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span>(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">'app-picture'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'./picture.component.html'</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">'./picture.component.styl'</span>],</span><br><span class=\"line\">  encapsulation: ViewEncapsulation.ShadowDom</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> PictureComponent</span><br></pre></td></tr></table></figure><h3 id=\"載入\"><a href=\"#載入\" class=\"headerlink\" title=\"載入\"></a>載入</h3><p>要使模板上使用 web components，需要在 <code>AppModule.ts</code> 的載入組件和組件的元素名。</p><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppModule <span class=\"keyword\">implements</span> DoBootstrap &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> faIconService: FaIconService, <span class=\"keyword\">private</span> injector: Injector</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> customButton = createCustomElement(PictureComponent, &#123;injector: <span class=\"keyword\">this</span>.injector&#125;);</span><br><span class=\"line\">    customElements.define(<span class=\"string\">'nat-picture'</span>, &lt;<span class=\"built_in\">Function</span>&gt;customButton);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ngDoBootstrap(appRef: ApplicationRef): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":null,"next":{"title":"在Angular動態加載html","link":"/2018/12/17/在Angular動態加載html"},"categories":[],"tags":[]}