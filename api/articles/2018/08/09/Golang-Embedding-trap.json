{"title":"Golang 偽鑽石問題","slug":"Golang-Embedding-trap","date":"2018-08-09T11:59:09.000Z","updated":"2018-12-10T11:08:42.291Z","comments":true,"path":"api/articles/2018/08/09/Golang-Embedding-trap.json","photos":["/2018/08/09/Golang-Embedding-trap/cjkewjgb8018b8i5n1doqibdi.1200.jpg"],"link":"","excerpt":"Golang 偽鑽石問題1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>type Reader struct&#123; buffer int &#125;<br>type Writer struct&#123; buffer int &#125;<br><br>type ReadWriter struct &#123;<br>\tReader<br>\tWriter<br>&#125;<br><br>func main() &#123;<br>\tvar rw ReadWriter<br>    // &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;<br>\tfmt.Printf(\"%+v\", rw.buffer)<br>    // ambiguous selector rw.buffer<br>&#125;<br>在 go 之中沒有實現真正的繼承，rw.buffer 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。要取得 buffer 就需要指定 rw.Reader.buffer 或 rw.Writer.buffer.1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>type Buffer struct&#123; Buffer int &#125;<br>type Reader struct&#123; Buffer &#125;<br><br>type ReadWriter struct &#123;<br>\tBuffer<br>\tReader<br>&#125;<br><br>func main() &#123;<br>\tvar rw ReadWriter<br>    // &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;<br>\tfmt.Printf(\"%+v\", rw.Buffer)<br>    // &#123;int:0&#125;<br>&#125;<br>這種寫法就沒有鑽石問題，因為淺層己經有 rw.Buffer，所以 rw.Reader.buffer` 不會自動提升。不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 Buffer。 所以這種情況下，還是盡量避免使用。","content":"<h1 id=\"Golang-偽鑽石問題\"><a href=\"#Golang-偽鑽石問題\" class=\"headerlink\" title=\"Golang 偽鑽石問題\"></a>Golang 偽鑽石問題</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">\tWriter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.buffer)</span><br><span class=\"line\">    <span class=\"comment\">// ambiguous selector rw.buffer</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 go 之中沒有實現真正的繼承，<code>rw.buffer</code> 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。</p>\n<p>要取得 buffer 就需要指定 <code>rw.Reader.buffer</code> 或 <code>rw.Writer.buffer</code>.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Buffer <span class=\"keyword\">struct</span>&#123; Buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; Buffer &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tBuffer</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.Buffer)</span><br><span class=\"line\">    <span class=\"comment\">// &#123;int:0&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這種寫法就沒有鑽石問題，因為淺層己經有 <code>rw.Buffer</code>，所以 <code></code>rw.Reader.buffer` 不會自動提升。</p>\n<p>不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 <code>Buffer</code>。 所以這種情況下，還是盡量避免使用。</p>\n","prev":{"title":"不如意事十常八九","link":"/2018/08/18/不如意事十常八九"},"next":{"title":"DNS故障轉移測試","link":"/2018/08/08/DNS-High-Availability"},"categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]}