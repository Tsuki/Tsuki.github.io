{"title":"Python腳本調整歌詞開始位","slug":"lrc-offset","date":"2018-08-01T19:18:49.000Z","updated":"2018-08-18T13:01:30.765Z","comments":true,"path":"api/articles/2018/08/01/lrc-offset.json","photos":["/2018/08/01/lrc-offset/photo_2018-07-03_21-21-15.jpg"],"link":"","excerpt":"","content":"<p>#一個 Python 腳本，用作全局調整歌詞提前量/開始位置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br><span class=\"line\" data-line-number=\"12\"></span><br><span class=\"line\" data-line-number=\"13\"></span><br><span class=\"line\" data-line-number=\"14\"></span><br><span class=\"line\" data-line-number=\"15\"></span><br><span class=\"line\" data-line-number=\"16\"></span><br><span class=\"line\" data-line-number=\"17\"></span><br><span class=\"line\" data-line-number=\"18\"></span><br><span class=\"line\" data-line-number=\"19\"></span><br><span class=\"line\" data-line-number=\"20\"></span><br><span class=\"line\" data-line-number=\"21\"></span><br><span class=\"line\" data-line-number=\"22\"></span><br><span class=\"line\" data-line-number=\"23\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> date, datetime, time, timedelta</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(filename: str, offset: int)</span> -&gt; <span class=\"keyword\">None</span>:</span></span><br><span class=\"line\">    thetime = re.compile(<span class=\"string\">r\"\\[([0-9]&#123;2&#125;):([0-9]&#123;2&#125;)\\.([0-9]&#123;2&#125;)?\\](.+)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(filename, <span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file.readlines():</span><br><span class=\"line\">            min_sec_str = thetime.search(line)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> min_sec_str:</span><br><span class=\"line\">                m, s, ms, lrc = min_sec_str.group(<span class=\"number\">1</span>), min_sec_str.group(<span class=\"number\">2</span>), min_sec_str.group(<span class=\"number\">3</span>), min_sec_str.group(<span class=\"number\">4</span>)</span><br><span class=\"line\">                t = datetime.combine(date.today(), time(<span class=\"number\">0</span>, int(m), int(s), int(ms))) + timedelta(milliseconds=offset)</span><br><span class=\"line\">                print(<span class=\"string\">f'[<span class=\"subst\">&#123;t.minute:<span class=\"number\">02</span>&#125;</span>:<span class=\"subst\">&#123;t.second:<span class=\"number\">02</span>&#125;</span>.<span class=\"subst\">&#123;t.microsecond:<span class=\"number\">02</span>&#125;</span>]<span class=\"subst\">&#123;lrc&#125;</span>'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(line)</span><br><span class=\"line\">    file.close</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv) &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> SyntaxError(<span class=\"string\">\"Insufficient arguments.\"</span>)</span><br><span class=\"line\">    main(sys.argv[<span class=\"number\">1</span>], int(sys.argv[<span class=\"number\">2</span>]))</span><br></pre></td></tr></table></figure>\n<p>先用正則找出歌詞位置，再提取出分，秒，微秒和歌詞，</p>\n<p>然後轉換成 Python 的時間類並調整時間，最後打印出來。</p>\n<h1 id=\"正則測試網站\"><a href=\"#正則測試網站\" class=\"headerlink\" title=\"正則測試網站\"></a>正則測試網站</h1><p><a href=\"https://regex101.com/\" target=\"_blank\" rel=\"noopener\">https://regex101.com/</a></p>\n","prev":{"title":"GPG-Key","link":"/2018/08/03/GPG-key"},"next":{"title":"Mac 虛擬化","link":"/2018/08/01/Mac-Hypervisor"},"categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[]}