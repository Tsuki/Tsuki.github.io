{"total":64,"pageSize":10,"pageCount":7,"data":[{"_id":"cjj4933300000rbpkcewre7z5","title":"日記","slug":"日記","date":"2018-07-02T13:59:38.000Z","updated":"2018-07-03T12:48:49.789Z","comments":true,"permalink":"/2018/07/02/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>東京Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 築地市場</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 淺草雷門</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 阿美橫町</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 晴空塔</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 台場</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 上野恩賜公園</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 東京鐵塔</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 迪士尼海洋</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 吉祥寺</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 明治神宮</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 銀座</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 河口湖</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 銚子市</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 江之島 羊羹</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 月見 文字燒</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 大阪燒(?</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 水信玄餅</li>\n</ul>\n<blockquote>\n<p>新郊</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 箱根</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 鐮倉</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 江之島</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 輕井澤</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 茨城櫻川</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 富士山</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 橫濱</li>\n</ul>\n<p><a href=\"https://www.japaholic.com/tw/article/263742/\" target=\"_blank\" rel=\"noopener\">https://www.japaholic.com/tw/article/263742/</a></p>\n<blockquote>\n<p>京都 Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 二條城</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 伏見稻荷</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 京都大學</li>\n</ul>\n<blockquote>\n<p>大阪 Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 日本橋</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 和歌山</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 奈良</li>\n</ul>\n<blockquote>\n<p>其他 Check point</p>\n</blockquote>","keywords":null,"content":null,"text":"東京Check point 築地市場 淺草雷門 阿美橫町 晴空塔 台場 上野恩賜公園 東京鐵塔 迪士尼海洋 吉祥寺 明治神宮 銀座 河口湖 銚子市 江之島 羊羹 月見 文字燒 大阪燒(? 水信玄餅新郊 箱根 鐮倉 江之島 輕井澤 茨城櫻川 富士山 橫濱https://www.ja","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/02/日記/cjij5zwak01nk6u5n1b9m3jws.jpg"],"source":"_posts/2018/07/02-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjj09cudi0000ran60evnblsy","title":"魚蛋論","slug":"魚蛋論","date":"2018-06-29T10:15:17.000Z","updated":"2018-12-10T11:08:42.279Z","comments":true,"permalink":"/2018/06/29/魚蛋論/","path":"api/articles/魚蛋論.json","excerpt":"<blockquote>\n<p>魚蛋論</p>\n</blockquote>\n<p>我們買串魚蛋都是這樣：為什麼呀？為什麼大家用同樣價錢買串魚蛋，他那串魚蛋比我的多了兩粒？</p>\n<p>我不要你給回我兩粒魚蛋，我要你拿走他那兩粒！大家少兩粒，這樣就公平呀！ </p>\n<p>為什麼他有甜醬我沒有呀？ 我不要你給我甜醬，我要你舔走他那些甜醬！大家都不甜，這樣就公平呀！</p>\n<p>為什麼他沒有了甜醬，又少了兩粒，佢仍然吃得這樣開心呀？不公平！</p>\n<p>怎樣才公平呀？大家都不開心！大家都吃得很下賤啊！—— 黃華子《冇炭用》2003</p>\n<p>怎樣才算公平，自己得不到，他人也別想得到，這是不是就是公平？</p>\n<p>樂觀主意者看到半杯水，會想到還有半杯水。</p>\n<p>而悲觀主者看到半杯水，會覺得只有半杯水。</p>\n<p>突發事情，十分之討厭，為什麼生活上有這麼多不如意的事情發生呢。</p>","keywords":null,"content":null,"text":"魚蛋論我們買串魚蛋都是這樣：為什麼呀？為什麼大家用同樣價錢買串魚蛋，他那串魚蛋比我的多了兩粒？我不要你給回我兩粒魚蛋，我要你拿走他那兩粒！大家少兩粒，這樣就公平呀！ 為什麼他有甜醬我沒有呀？ 我不要你給我甜醬，我要你舔走他那些甜醬！大家都不甜，這樣就公平呀！為什麼他沒有了甜醬，又","link":"","raw":null,"photos":["/2018/06/29/魚蛋論/cjiky05ny01no6u5neo1q9git.jpg"],"source":"_posts/2018/06/29-魚蛋論.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjiy0r07v0000rgqpz1yd13np","title":"日記","slug":"日記","date":"2018-06-28T10:27:58.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/28/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>Citrus (~08)</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_09-34-07.jpg\" alt=\"桃木野姬子\"></p>\n<p>這個髮形都是中二病的吧。（神崎蘭子</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-31-47.jpg\" alt=\"為了喜歡的人 只能放棄喜歡的念頭\"></p>\n<p>喜歡一個人是沒有條件，沒有原因，是一種運命。但運命總是事願人為，可能這樣才是命運吧。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-31-50.jpg\" alt=\"戀愛還真是複雜啊\"></p>\n<p>從來戀愛都不是一件簡單的事情，而是一件令人盲目的事。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_09-34-12.jpg\" alt=\"好啦 不管發生什麼事我都會安慰你的\"></p>\n<p>晴美(はるみ)真的好好人，令我想起朔莉(さくり)，兩人的性格是無私的付出，不求回報。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-32-09.jpg\" alt=\"水澤茉莉\"></p>","keywords":null,"content":null,"text":"Citrus (~08) [Figure]  ","link":"","raw":null,"photos":["/2018/06/28/日記/photo_2018-06-28_10-32-05.jpg"],"source":"_posts/2018/06/28-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjix230pj0000rinojrjaa5s2","title":"Angular管理使用者登入狀態","slug":"Angular管理使用者登入狀態","date":"2018-06-27T18:30:40.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/27/Angular管理使用者登入狀態/","path":"api/articles/Angular管理使用者登入狀態.json","excerpt":"","keywords":null,"content":"<p>使用 Angular interceptor, guard 和 service 。</p>\n<p>Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。</p>\n<p>在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckStart, GuardsCheckStart 等額外階段。</p>\n<ol>\n<li><p>auth.service.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthService &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 追蹤 Gruard 並保存初始化 URL, 取得 URL 後取消訂閱以避免內存洩漏</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.events = <span class=\"keyword\">this</span>.router.events.subscribe(<span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (event <span class=\"keyword\">instanceof</span> GuardsCheckEnd &amp;&amp; event.shouldActivate === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initRoute.next(event.url);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.events.unsubscribe();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  events: Subscription;</span><br><span class=\"line\">  <span class=\"comment\">// 使用 BehaviorSubject 創建 Observable</span></span><br><span class=\"line\">  isLoginSubject = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">boolean</span>&gt;(<span class=\"literal\">false</span>);</span><br><span class=\"line\">  userInfo = &#123;&#125; <span class=\"keyword\">as</span> User;</span><br><span class=\"line\">  initRoute = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  login(info: LoginInfo): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.login(info).subscribe(<span class=\"function\"><span class=\"params\">next</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = next.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">''</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  logout(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.logout().subscribe();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>.userInfo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 刷新登陸狀態</span></span><br><span class=\"line\">  refresh(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.refresh().subscribe(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = value.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  isLoggedIn(): Observable&lt;<span class=\"built_in\">boolean</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.isLoginSubject.asObservable();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>app.guard.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppGuard <span class=\"keyword\">implements</span> CanActivate &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> auth: AuthService, <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 以 Angular Guard 進行驗證</span></span><br><span class=\"line\">  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 因為每次驗證都是單一行為，所以不需要訂閱 Observable，只需要取最後的值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.auth.isLoginSubject.value) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>app-routing.module.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'login'</span>, component: LoginComponent&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在需要驗証 Route 的 canActivate 上加入己創建的Guard</span></span><br><span class=\"line\">  &#123;path: <span class=\"string\">''</span>, component: LayoutComponent, canActivate: [AppGuard]&#125;,</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'**'</span>, component: NotfoundComponent&#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@NgModule</span>(&#123;</span><br><span class=\"line\">  imports: [RouterModule.forRoot(routes)],</span><br><span class=\"line\">  exports: [RouterModule]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppRoutingModule &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>AppComponent.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在主組件上初始化和重新取得登陸資料</span></span><br><span class=\"line\">  ngOnInit(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.refresh();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p>login.component.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> LoginComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  loginInfo: LoginInfo = &#123;username: <span class=\"string\">''</span>, password: <span class=\"string\">''</span>&#125;;</span><br><span class=\"line\">  <span class=\"comment\">// 如果沒有登陸資料取消訂閱 Router event 以避免內存消耗</span></span><br><span class=\"line\">  ngOnInit() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.events.unsubscribe();</span><br><span class=\"line\">    <span class=\"comment\">// 在取得登陸資料後，跳轉到之前保存的地址上</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.isLoggedIn().subscribe(<span class=\"function\"><span class=\"params\">sub</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (sub) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.router.navigate([<span class=\"keyword\">this</span>.auth.initRoute.value]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  login() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.login(<span class=\"keyword\">this</span>.loginInfo);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>​    </p>\n<ol start=\"6\">\n<li><p>auth.interceptor.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthInterceptor <span class=\"keyword\">implements</span> HttpInterceptor &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> auth: AuthService</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  intercept(request: HttpRequest&lt;<span class=\"built_in\">any</span>&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;<span class=\"built_in\">any</span>&gt;&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Httpclient 後處理攔截器，在攔截器到 401/Unauthorized 跳回登陸頁面 </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> next.handle(request).pipe(tap(<span class=\"function\">(<span class=\"params\">_: HttpEvent&lt;<span class=\"built_in\">any</span>&gt;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    &#125;, <span class=\"function\">(<span class=\"params\">err: <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err <span class=\"keyword\">instanceof</span> HttpErrorResponse &amp;&amp; err.status === <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.auth.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","text":"使用 Angular interceptor, guard 和 service 。Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckSta","link":"","raw":null,"photos":["/2018/06/27/Angular管理使用者登入狀態/photo_2018-06-19_10-38-44.jpg"],"source":"_posts/2018/06/27-Angular管理使用者登入狀態.md","categories":[{"name":"Front-end","slug":"Front-end","count":4,"path":"api/categories/Front-end.json"},{"name":"Angular","slug":"Front-end/Angular","count":1,"path":"api/categories/Front-end/Angular.json"}],"tags":[]},{"_id":"cjiwxod5q0000rjmi9swjfpia","title":"日記","slug":"日記","date":"2018-06-27T10:24:30.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/27/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>Bayonetta 1</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/DgjNMeiUEAANreR.jpg\" alt=\"Bayonetta\"></p>\n<p>Bayonetta  終於下載好了，昨天玩到第三章。</p>\n<p>和二代比較下，一代的手感要差一點。Watch Time，的時機比二代難抓，所以combo比較難打。</p>\n<p>別外劇情上，一代開始時比較多回憶殺，風格上也比較血腥和黑暗系。</p>\n<p>QTE和即死的場影比較多，動不動就死。連續三關都是Stone Award。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/DgoTvQjVAAEgsFL.jpg\" alt=\"Bayonetta Chapter3\"></p>\n<blockquote>\n<p>Citrus</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/photo_2018-06-27_14-27-27.jpg\" alt=\"Citrus 為什麼放任這種蠢貨的存在\"></p>\n<p>這是看了前兩集的感想，主角就是一個蠢貨。</p>","keywords":null,"content":null,"text":"Bayonetta 1 [Figure] 雖然沒有看世界盃，但每次世界盃都很戲劇化呢。","link":"","raw":null,"photos":["/2018/06/27/日記/photo_2018-06-27_10-00-34.jpg"],"source":"_posts/2018/06/27-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjitrj2ch0000r5jyo25bphu1","title":"日記","slug":"日記","date":"2018-06-24T22:27:42.000Z","updated":"2018-12-10T11:08:42.267Z","comments":true,"permalink":"/2018/06/24/日記/","path":"api/articles/日記.json","excerpt":"<p>今天終於買到Switch了。本來只是逛一下商場和吃午飯的，忽然店家老闆發消息來說有貨了。</p>\n<p>連主機一起買了三盤遊戲，分別是Bayonetta 2, Zelda 和Splatoon 2 。</p>\n<blockquote>\n<p>Bayonetta</p>\n</blockquote>\n<p>先說說Bayonetta 2, 這是一款動作類遊戲，以華麗連技為主打內容，感覺上和Devil may cry 很類似。</p>\n<img src=\"/2018/06/24/日記/DgeSY8FUYAEaWyu.jpg\" title=\"[Bayonetta 2]\">\n<p>自從 DMC4之後，卡婊己經很久沒出續作，並一直在炒冷飯。而貝姐1和2正好補充這這段空窗期。</p>\n<p>因為歐美版是買二代送一代，不過一代是以下載碼方式提供，不過這下載竟然有分區，看清楚才知道買的是歐版，浪費不少時間才拿到下載內容。</p>\n<p>而且Switch的遊戲內容都不少，一個遊戲都以20GB起跳，就先玩一下二代，等一代下載好再回去玩了。</p>\n<p>別外今年E3 炸出DMC5的Trailer，暫時預定會在 2019 年春季在X1X，PS4 。看來PS4又要吃半年灰。</p>\n<p>感覺上是被B3炸出來的，因為B3在TGA2017就白金工作室就發布（笑。</p>","keywords":null,"content":null,"text":"今天終於買到Switch了。本來只是逛一下商場和吃午飯的，忽然店家老闆發消息來說有貨了。連主機一起買了三盤遊戲，分別是Bayonetta 2, Zelda 和Splatoon 2 。Bayonetta先說說Bayonetta 2, 這是一款動作類遊戲，以華麗連技為主打內容，感覺上","link":"","raw":null,"photos":["/2018/06/24/日記/cjihtazwc01h26u5n8p8z9pep.1200.jpg"],"source":"_posts/2018/06/24-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjirmj7r90000rhnwsqukn1zv","title":"日記","slug":"日記","date":"2018-06-23T22:44:30.000Z","updated":"2018-12-10T11:08:42.267Z","comments":true,"permalink":"/2018/06/23/日記/","path":"api/articles/日記.json","excerpt":"","keywords":null,"content":"<p>今天去商場找賣主機的店鋪，怎知道沒有貨。明明上星期還有貨的，白跑一趟。</p>\n<p>下星期得再去一趟。</p>\n<p>別外，今晚跑步時忽然停電，嚇了一跳。最近在練長跑，3分鐘慢跑，2分鐘快跑，一小時跑6公里左右。</p>\n<p>一小時下來大約消耗400千卡。</p>\n<p>如果以半程馬拉松為目標來算，三小時跑21公里。平均一小時需要跑7公里，離目標差一點點。</p>\n","text":"今天去商場找賣主機的店鋪，怎知道沒有貨。明明上星期還有貨的，白跑一趟。下星期得再去一趟。別外，今晚跑步時忽然停電，嚇了一跳。最近在練長跑，3分鐘慢跑，2分鐘快跑，一小時跑6公里左右。一小時下來大約消耗400千卡。如果以半程馬拉松為目標來算，三小時跑21公里。平均一小時需要跑7公里","link":"","raw":null,"photos":["/2018/06/23/日記/cjii4nkon01nd6u5nw0e4q59o.1200.jpg"],"source":"_posts/2018/06/23-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjiplgybd0000r4rooo1ur8mw","title":"春季整合","slug":"春季整合","date":"2018-06-22T10:53:51.000Z","updated":"2018-12-10T11:08:42.267Z","comments":true,"permalink":"/2018/06/22/春季整合/","path":"api/articles/春季整合.json","excerpt":"","keywords":null,"content":"<p>2018春季快要完結了，是時候整理一下要補的番。</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 極道超女</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> P5</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Steins;Gate0</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 驚爆危機</li>\n</ul>\n<p>2017冬沒有補的和己經補了的</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 齊木楠雄的災難</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 搖曳露營</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 龍王的工作</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 爆肝工程師的異世界狂想曲</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 博多豚骨拉麵團</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> citrus</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 擅長捉弄人的高木同學</li>\n</ul>\n<p>最近應該會買一台switch，以前一直想玩Bayonetta，但一直沒有買任天堂的主機。</p>\n<p>上一次也是第一次買的任天堂遊戲機是GBA SP，但是不到半年就不見了。</p>\n","text":"2018春季快要完結了，是時候整理一下要補的番。 極道超女 P5 Steins;Gate0 驚爆危機2017冬沒有補的和己經補了的 齊木楠雄的災難 搖曳露營 龍王的工作 爆肝工程師的異世界狂想曲 博多豚骨拉麵團 citrus 擅長捉弄人的高木同學最近應該會買一台switch，以前","link":"","raw":null,"photos":["/2018/06/22/春季整合/cjihvuq1001ll6u5n2uja63b6.1200.jpg"],"source":"_posts/2018/06/22-春季整合.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjifgk1wn0000r3l8eps95mss","title":"遊戲","slug":"遊戲","date":"2018-06-15T10:09:05.000Z","updated":"2018-12-10T11:08:42.267Z","comments":true,"permalink":"/2018/06/15/遊戲/","path":"api/articles/遊戲.json","excerpt":"","keywords":null,"content":"<p>遊戲人生，人生遊戲，如果將人生看作是一場遊戲。</p>\n<p>每一個人在他遊戲之中，在不同時間，被不同任務驅使著，去完成每一項目標。</p>\n<p>當遊戲結束之後，沒有人能夠仍舊留在遊戲之中，有人選擇了離開，然後進行另外一個遊戲，有人停留在結束的畫面上回憶遊戲的過程。</p>\n<p>但每一局新的遊戲把好奇心和興奮感慢慢消耗殆盡，當遊戲不再是遊戲時，當人生不再是遊戲時，當瞭解得越多，當目標成為責任。</p>\n<p>也許有資格回首往事，遊戲人生，是解脫了一切束縛，真正能夠做到放下一切的人。</p>\n","text":"遊戲人生，人生遊戲，如果將人生看作是一場遊戲。每一個人在他遊戲之中，在不同時間，被不同任務驅使著，去完成每一項目標。當遊戲結束之後，沒有人能夠仍舊留在遊戲之中，有人選擇了離開，然後進行另外一個遊戲，有人停留在結束的畫面上回憶遊戲的過程。但每一局新的遊戲把好奇心和興奮感慢慢消耗殆盡","link":"","raw":null,"photos":["/2018/06/15/遊戲/cjh9a694t00qw6u5nozugautk.1200.jpg"],"source":"_posts/2018/06/15-遊戲.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjiai3vop0000r0nscncdmgrr","title":"日記","slug":"日記","date":"2018-06-11T23:47:45.000Z","updated":"2018-12-10T11:08:42.263Z","comments":true,"permalink":"/2018/06/11/日記/","path":"api/articles/日記.json","excerpt":"","keywords":null,"content":"<p>與其活在夢想之中，還不如活在現實之中更好。用人性貪圖安逸，負面的精神，來引導自己，比用純淨的夢想，高尚的道德來約束自己，更加切實可行。</p>\n","text":"與其活在夢想之中，還不如活在現實之中更好。用人性貪圖安逸，負面的精神，來引導自己，比用純淨的夢想，高尚的道德來約束自己，更加切實可行。","link":"","raw":null,"photos":["/2018/06/11/日記/cjh9c1pbt00tk6u5np6pyxfi0.1200.jpg"],"source":"_posts/2018/06/11-日記.md","categories":[],"tags":[]}]}