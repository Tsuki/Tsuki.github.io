{"total":69,"pageSize":10,"pageCount":7,"data":[{"_id":"cjjqkgour0000r3qpven78loe","title":"Food","slug":"Food","date":"2018-07-18T10:03:05.000Z","updated":"2018-07-18T03:27:43.205Z","comments":true,"permalink":"/2018/07/18/Food/","path":"api/articles/Food.json","excerpt":"<p>低澱粉、高蛋白飲食</p>\n<p>一般來說，飲食中的醣類約占每日總熱量的50~60%，以提供人體主要的能量。醣類進入身體，經消化後產生「葡萄糖」。「葡萄糖」是神經系統、肌肉細胞、紅血球等主要仰賴的能量。</p>\n<p>「高蛋白飲食」通常伴隨嚴格的限制澱粉，背後牽涉複雜的生化代謝的改變。多數研究顯示，短期「高蛋白飲食」確實有助於減重。</p>\n<p>不是不是所有人都適合低醣的「高蛋白飲食」。美國心臟協會在2009年提出警告：長期的高蛋白飲食，包括可能增加心血管疾病及骨質疏鬆症的患病風險，且易使尿酸值提高，惡化痛風症狀。</p>\n<p>減少精緻澱粉類的分量，並適度增加植物性蛋白質及非紅肉內臟的動物蛋白質，而非採取激進方式如嚴格限制澱粉，卻對蛋白質攝取不設上限。</p>\n<p>GI值又稱升糖指數，指的是食物吃進體內後，造成血糖上升速度的快慢。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/07/18/Food/givstime.jpg\" alt=\"GI對血糖的影響\"></p>\n<ul>\n<li>不易累積體脂肪。</li>\n<li>不易感到疲倦、昏昏欲睡。</li>\n<li>飽足感時間延長，比較不容易餓。</li>\n<li>降低三酸甘油酯、總膽固醇及壞膽固醇。</li>\n<li>容易控管血糖值，降低心血管疾病及糖尿病併發症風險。</li>\n</ul>\n<p>大部分蔬菜、含糖量低的水果都屬於低GI食物，除了能增加飽足感，也能避免吃下過多的澱粉類食物。</p>\n<p>避免烹調時間過長、食物過於軟爛，就能延緩食物消化的速度，血糖也不至於上升太快，如白米飯會比白粥的GI值低。</p>","keywords":null,"content":null,"text":"低澱粉、高蛋白飲食一般來說，飲食中的醣類約占每日總熱量的50~60%，以提供人體主要的能量。醣類進入身體，經消化後產生「葡萄糖」。「葡萄糖」是神經系統、肌肉細胞、紅血球等主要仰賴的能量。「高蛋白飲食」通常伴隨嚴格的限制澱粉，背後牽涉複雜的生化代謝的改變。多數研究顯示，短期「高蛋白","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/18/Food/cjij5zvjk01nj6u5nvm3ufhx6.jpg"],"source":"_posts/2018/07/18-Food.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjjo8eh2z0000r9mux54j920w","title":"Sick","slug":"sick","date":"2018-07-16T19:00:04.000Z","updated":"2018-07-16T12:14:29.642Z","comments":true,"permalink":"/2018/07/16/sick/","path":"api/articles/sick.json","excerpt":"<p>生病是很痛苦，而一個人在外生病，沒有人幫助更痛苦。</p>\n<p>腸胃炎引起的肚子绞痛實在太難受了。得了最嚴重的腸胃炎還付帶發燒和關接肌肉痛。</p>\n<p>第一天發病時在半夜，還好想起有阿士匹靈，吃了120mg的劑量才睡著。</p>\n<p>第二天一早跑去醫院看醫生了，注了四瓶藥水，還被開了抗生素的藥。</p>\n<p>起因可能是因為牛奶吧，紙包的牛奶太易破損，而且牛奶又不好保質。</p>\n<p>別外，再次喝起牛奶，還是覺得討厭牛奶，上一次飲純牛奶己經好幾年前了。</p>\n<p>這次事件還好有帶阿士匹靈在身邊，阿士匹靈簡真是萬能應急藥，不過也不能太依懶。</p>\n","keywords":null,"content":null,"text":"生病是很痛苦，而一個人在外生病，沒有人幫助更痛苦。腸胃炎引起的肚子绞痛實在太難受了。得了最嚴重的腸胃炎還付帶發燒和關接肌肉痛。第一天發病時在半夜，還好想起有阿士匹靈，吃了120mg的劑量才睡著。第二天一早跑去醫院看醫生了，注了四瓶藥水，還被開了抗生素的藥。起因可能是因為牛奶吧，紙","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/16/sick/cjj6bv5ni01oc6u5n7wvxozfn.jpg"],"source":"_posts/2018/07/16-sick.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjj9n0vbg0000r5p9bk1y9fhd","title":"調酒-Cointreau","slug":"Cointreau","date":"2018-07-06T13:53:47.000Z","updated":"2018-07-06T08:04:35.628Z","comments":true,"permalink":"/2018/07/06/Cointreau/","path":"api/articles/Cointreau.json","excerpt":"<p>Cointreau 又名君度橙酒</p>\n<p>這是一款很常用到的Triple sec (三蒸??), 但很多酒譜都是指名要君度而不是 Triple sec.</p>\n<p>不同基酒配君度酒可以調成不同酒，比如</p>\n<p>Vodka：雪國，神風，Balalaika</p>\n<p>Gin：White Lady,  Jasmine</p>\n<p>Tequila：Margarita</p>\n<p>接下來介紹兩款基於琴酒和君度調成調酒：</p>\n<p>White Lady, Jasmine</p>\n<blockquote>\n<p>White Lady</p>\n</blockquote>\n<p>酒譜：</p>","keywords":null,"content":null,"text":"Cointreau 又名君度橙酒這是一款很常用到的Triple sec (三蒸??), 但很多酒譜都是指名要君度而不是 Triple sec.不同基酒配君度酒可以調成不同酒，比如Vodka：雪國，神風，BalalaikaGin：White Lady,  JasmineTequil","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/06/Cointreau/cjihvdt1e01kr6u5ne7vytlov.jpg"],"source":"_posts/2018/07/06-Cointreau.md","categories":[{"name":"調酒","slug":"調酒","count":2,"path":"api/categories/調酒.json"}],"tags":[{"name":"White Lady","slug":"White-Lady","count":1,"path":"api/tags/White-Lady.json"},{"name":"Yukiguni","slug":"Yukiguni","count":1,"path":"api/tags/Yukiguni.json"},{"name":"Cointreau","slug":"Cointreau","count":1,"path":"api/tags/Cointreau.json"}]},{"_id":"cjj6ndoe20003r4nw9glm3rrc","title":"調酒-Negroni","slug":"調酒-Negroni","date":"2018-07-04T11:16:04.000Z","updated":"2018-07-06T08:03:36.476Z","comments":true,"permalink":"/2018/07/04/調酒-Negroni/","path":"api/articles/調酒-Negroni.json","excerpt":"<p>Negroni 內格羅尼 </p>\n<blockquote>\n<p>苦酒苦口但顧肝，琴酒愉悅卻傷身~內格羅尼，健康與快樂之間的平衡點</p>\n<p>Negroni, The bitters are excellent for your liver, the gin is bad for you. They balance each other.</p>\n</blockquote>\n<p>喜歡琴酒的就不能錯過的酒，這酒是從美國佬酒譜加入琴酒而得來的調酒。</p>\n<p>酒譜：</p>\n<p>30ml 琴酒</p>\n<p>30ml 肯巴利苦酒</p>\n<p>30ml 甜香艾酒</p>\n<p>在雪克杯中混合後，以橙皮捲作為裝飾。</p>\n<p>這種一比一比一比例，是經典酒譜的組合，但也可以按個人喜好小量調整。</p>\n<p>這杯酒可以做成短飲，也可以加入冰塊做成長飲，冰塊溶化後每一啖口感也會隨之改變。</p>","keywords":null,"content":null,"text":"Negroni 內格羅尼 苦酒苦口但顧肝，琴酒愉悅卻傷身~內格羅尼，健康與快樂之間的平衡點Negroni, The bitters are excellent for your liver, the gin is bad for you. They balance each ot","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/04/調酒-Negroni/Negroni.jpg"],"source":"_posts/2018/07/04-調酒-Negroni.md","categories":[{"name":"調酒","slug":"調酒","count":2,"path":"api/categories/調酒.json"}],"tags":[{"name":"Negroni","slug":"Negroni","count":1,"path":"api/tags/Negroni.json"}]},{"_id":"cjj5owi760000r5ny5iluvv2f","title":"手機崩潰","slug":"手機崩潰","date":"2018-07-03T15:40:59.000Z","updated":"2018-07-03T12:51:38.887Z","comments":true,"permalink":"/2018/07/03/手機崩潰/","path":"api/articles/手機崩潰.json","excerpt":"<p>昨晚手機突然不能上網，而且連Wi-Fi也連不了，但別的手機還能用。</p>\n<p>還以為手機壞了，手機重置後情況還是一樣，差點嚇死。</p>\n<p>最後發現是話費用光了。</p>\n<p>情況實在太巧合了，WI-FI功能被影響到。</p>\n<p>今時今日，沒有手機或沒有上網簡直要命。</p>\n<p>手機因為重置了，不少加了鎖的帳號還不能登回來，只能等人工恢覆。</p>\n","keywords":null,"content":null,"text":"昨晚手機突然不能上網，而且連Wi-Fi也連不了，但別的手機還能用。還以為手機壞了，手機重置後情況還是一樣，差點嚇死。最後發現是話費用光了。情況實在太巧合了，WI-FI功能被影響到。今時今日，沒有手機或沒有上網簡直要命。手機因為重置了，不少加了鎖的帳號還不能登回來，只能等人工恢覆。","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/03/手機崩潰/cjj48md9q01o56u5nkqe9edw2.jpg"],"source":"_posts/2018/07/03-手機崩潰.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjj4933300000rbpkcewre7z5","title":"日記","slug":"日記","date":"2018-07-02T13:59:38.000Z","updated":"2018-07-03T12:48:49.789Z","comments":true,"permalink":"/2018/07/02/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>東京Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 築地市場</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 淺草雷門</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 阿美橫町</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 晴空塔</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 台場</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 上野恩賜公園</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 東京鐵塔</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 迪士尼海洋</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 吉祥寺</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 明治神宮</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 銀座</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 河口湖</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 銚子市</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 江之島 羊羹</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 月見 文字燒</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 大阪燒(?</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 水信玄餅</li>\n</ul>\n<blockquote>\n<p>新郊</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 箱根</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 鐮倉</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 江之島</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 輕井澤</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 茨城櫻川</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 富士山</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 橫濱</li>\n</ul>\n<p><a href=\"https://www.japaholic.com/tw/article/263742/\" target=\"_blank\" rel=\"noopener\">https://www.japaholic.com/tw/article/263742/</a></p>\n<blockquote>\n<p>京都 Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 二條城</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 伏見稻荷</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 京都大學</li>\n</ul>\n<blockquote>\n<p>大阪 Check point</p>\n</blockquote>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 日本橋</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 和歌山</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 奈良</li>\n</ul>\n<blockquote>\n<p>其他 Check point</p>\n</blockquote>","keywords":null,"content":null,"text":"東京Check point 築地市場 淺草雷門 阿美橫町 晴空塔 台場 上野恩賜公園 東京鐵塔 迪士尼海洋 吉祥寺 明治神宮 銀座 河口湖 銚子市 江之島 羊羹 月見 文字燒 大阪燒(? 水信玄餅新郊 箱根 鐮倉 江之島 輕井澤 茨城櫻川 富士山 橫濱https://www.ja","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/02/日記/cjij5zwak01nk6u5n1b9m3jws.jpg"],"source":"_posts/2018/07/02-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjj09cudi0000ran60evnblsy","title":"魚蛋論","slug":"魚蛋論","date":"2018-06-29T10:15:17.000Z","updated":"2018-12-10T11:08:42.279Z","comments":true,"permalink":"/2018/06/29/魚蛋論/","path":"api/articles/魚蛋論.json","excerpt":"<blockquote>\n<p>魚蛋論</p>\n</blockquote>\n<p>我們買串魚蛋都是這樣：為什麼呀？為什麼大家用同樣價錢買串魚蛋，他那串魚蛋比我的多了兩粒？</p>\n<p>我不要你給回我兩粒魚蛋，我要你拿走他那兩粒！大家少兩粒，這樣就公平呀！ </p>\n<p>為什麼他有甜醬我沒有呀？ 我不要你給我甜醬，我要你舔走他那些甜醬！大家都不甜，這樣就公平呀！</p>\n<p>為什麼他沒有了甜醬，又少了兩粒，佢仍然吃得這樣開心呀？不公平！</p>\n<p>怎樣才公平呀？大家都不開心！大家都吃得很下賤啊！—— 黃華子《冇炭用》2003</p>\n<p>怎樣才算公平，自己得不到，他人也別想得到，這是不是就是公平？</p>\n<p>樂觀主意者看到半杯水，會想到還有半杯水。</p>\n<p>而悲觀主者看到半杯水，會覺得只有半杯水。</p>\n<p>突發事情，十分之討厭，為什麼生活上有這麼多不如意的事情發生呢。</p>","keywords":null,"content":null,"text":"魚蛋論我們買串魚蛋都是這樣：為什麼呀？為什麼大家用同樣價錢買串魚蛋，他那串魚蛋比我的多了兩粒？我不要你給回我兩粒魚蛋，我要你拿走他那兩粒！大家少兩粒，這樣就公平呀！ 為什麼他有甜醬我沒有呀？ 我不要你給我甜醬，我要你舔走他那些甜醬！大家都不甜，這樣就公平呀！為什麼他沒有了甜醬，又","link":"","raw":null,"photos":["/2018/06/29/魚蛋論/cjiky05ny01no6u5neo1q9git.jpg"],"source":"_posts/2018/06/29-魚蛋論.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjiy0r07v0000rgqpz1yd13np","title":"日記","slug":"日記","date":"2018-06-28T10:27:58.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/28/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>Citrus (~08)</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_09-34-07.jpg\" alt=\"桃木野姬子\"></p>\n<p>這個髮形都是中二病的吧。（神崎蘭子</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-31-47.jpg\" alt=\"為了喜歡的人 只能放棄喜歡的念頭\"></p>\n<p>喜歡一個人是沒有條件，沒有原因，是一種運命。但運命總是事願人為，可能這樣才是命運吧。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-31-50.jpg\" alt=\"戀愛還真是複雜啊\"></p>\n<p>從來戀愛都不是一件簡單的事情，而是一件令人盲目的事。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_09-34-12.jpg\" alt=\"好啦 不管發生什麼事我都會安慰你的\"></p>\n<p>晴美(はるみ)真的好好人，令我想起朔莉(さくり)，兩人的性格是無私的付出，不求回報。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/28/日記/photo_2018-06-28_10-32-09.jpg\" alt=\"水澤茉莉\"></p>","keywords":null,"content":null,"text":"Citrus (~08) [Figure]  ","link":"","raw":null,"photos":["/2018/06/28/日記/photo_2018-06-28_10-32-05.jpg"],"source":"_posts/2018/06/28-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjix230pj0000rinojrjaa5s2","title":"Angular管理使用者登入狀態","slug":"Angular管理使用者登入狀態","date":"2018-06-27T18:30:40.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/27/Angular管理使用者登入狀態/","path":"api/articles/Angular管理使用者登入狀態.json","excerpt":"<p>使用 Angular interceptor, guard 和 service 。</p>\n<p>Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。</p>\n<p>在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckStart, GuardsCheckStart 等額外階段。</p>\n<ol>\n<li><p>auth.service.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthService &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 追蹤 Gruard 並保存初始化 URL, 取得 URL 後取消訂閱以避免內存洩漏</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.events = <span class=\"keyword\">this</span>.router.events.subscribe(<span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (event <span class=\"keyword\">instanceof</span> GuardsCheckEnd &amp;&amp; event.shouldActivate === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initRoute.next(event.url);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.events.unsubscribe();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  events: Subscription;</span><br><span class=\"line\">  <span class=\"comment\">// 使用 BehaviorSubject 創建 Observable</span></span><br><span class=\"line\">  isLoginSubject = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">boolean</span>&gt;(<span class=\"literal\">false</span>);</span><br><span class=\"line\">  userInfo = &#123;&#125; <span class=\"keyword\">as</span> User;</span><br><span class=\"line\">  initRoute = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  login(info: LoginInfo): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.login(info).subscribe(<span class=\"function\"><span class=\"params\">next</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = next.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">''</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  logout(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.logout().subscribe();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>.userInfo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 刷新登陸狀態</span></span><br><span class=\"line\">  refresh(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.refresh().subscribe(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = value.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  isLoggedIn(): Observable&lt;<span class=\"built_in\">boolean</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.isLoginSubject.asObservable();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>app.guard.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppGuard <span class=\"keyword\">implements</span> CanActivate &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> auth: AuthService, <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 以 Angular Guard 進行驗證</span></span><br><span class=\"line\">  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 因為每次驗證都是單一行為，所以不需要訂閱 Observable，只需要取最後的值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.auth.isLoginSubject.value) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>app-routing.module.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'login'</span>, component: LoginComponent&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在需要驗証 Route 的 canActivate 上加入己創建的Guard</span></span><br><span class=\"line\">  &#123;path: <span class=\"string\">''</span>, component: LayoutComponent, canActivate: [AppGuard]&#125;,</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'**'</span>, component: NotfoundComponent&#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@NgModule</span>(&#123;</span><br><span class=\"line\">  imports: [RouterModule.forRoot(routes)],</span><br><span class=\"line\">  exports: [RouterModule]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppRoutingModule &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>AppComponent.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在主組件上初始化和重新取得登陸資料</span></span><br><span class=\"line\">  ngOnInit(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.refresh();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p>login.component.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> LoginComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  loginInfo: LoginInfo = &#123;username: <span class=\"string\">''</span>, password: <span class=\"string\">''</span>&#125;;</span><br><span class=\"line\">  <span class=\"comment\">// 如果沒有登陸資料取消訂閱 Router event 以避免內存消耗</span></span><br><span class=\"line\">  ngOnInit() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.events.unsubscribe();</span><br><span class=\"line\">    <span class=\"comment\">// 在取得登陸資料後，跳轉到之前保存的地址上</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.isLoggedIn().subscribe(<span class=\"function\"><span class=\"params\">sub</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (sub) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.router.navigate([<span class=\"keyword\">this</span>.auth.initRoute.value]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  login() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.login(<span class=\"keyword\">this</span>.loginInfo);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>​    </p>\n<ol start=\"6\">\n<li><p>auth.interceptor.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthInterceptor <span class=\"keyword\">implements</span> HttpInterceptor &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> auth: AuthService</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  intercept(request: HttpRequest&lt;<span class=\"built_in\">any</span>&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;<span class=\"built_in\">any</span>&gt;&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Httpclient 後處理攔截器，在攔截器到 401/Unauthorized 跳回登陸頁面 </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> next.handle(request).pipe(tap(<span class=\"function\">(<span class=\"params\">_: HttpEvent&lt;<span class=\"built_in\">any</span>&gt;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    &#125;, <span class=\"function\">(<span class=\"params\">err: <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err <span class=\"keyword\">instanceof</span> HttpErrorResponse &amp;&amp; err.status === <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.auth.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","keywords":null,"content":null,"text":"使用 Angular interceptor, guard 和 service 。Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckSta","link":"","raw":null,"photos":["/2018/06/27/Angular管理使用者登入狀態/photo_2018-06-19_10-38-44.jpg"],"source":"_posts/2018/06/27-Angular管理使用者登入狀態.md","categories":[{"name":"Front-end","slug":"Front-end","count":4,"path":"api/categories/Front-end.json"},{"name":"Angular","slug":"Front-end/Angular","count":1,"path":"api/categories/Front-end/Angular.json"}],"tags":[]},{"_id":"cjiwxod5q0000rjmi9swjfpia","title":"日記","slug":"日記","date":"2018-06-27T10:24:30.000Z","updated":"2018-12-10T11:08:42.271Z","comments":true,"permalink":"/2018/06/27/日記/","path":"api/articles/日記.json","excerpt":"<blockquote>\n<p>Bayonetta 1</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/DgjNMeiUEAANreR.jpg\" alt=\"Bayonetta\"></p>\n<p>Bayonetta  終於下載好了，昨天玩到第三章。</p>\n<p>和二代比較下，一代的手感要差一點。Watch Time，的時機比二代難抓，所以combo比較難打。</p>\n<p>別外劇情上，一代開始時比較多回憶殺，風格上也比較血腥和黑暗系。</p>\n<p>QTE和即死的場影比較多，動不動就死。連續三關都是Stone Award。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/DgoTvQjVAAEgsFL.jpg\" alt=\"Bayonetta Chapter3\"></p>\n<blockquote>\n<p>Citrus</p>\n</blockquote>\n<p><img src=\"https://blog.sukitsuki.com/2018/06/27/日記/photo_2018-06-27_14-27-27.jpg\" alt=\"Citrus 為什麼放任這種蠢貨的存在\"></p>\n<p>這是看了前兩集的感想，主角就是一個蠢貨。</p>","keywords":null,"content":null,"text":"Bayonetta 1 [Figure] 雖然沒有看世界盃，但每次世界盃都很戲劇化呢。","link":"","raw":null,"photos":["/2018/06/27/日記/photo_2018-06-27_10-00-34.jpg"],"source":"_posts/2018/06/27-日記.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]}]}