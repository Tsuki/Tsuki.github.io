{"total":69,"pageSize":10,"pageCount":7,"data":[{"_id":"cjkzfmclx0000tup6bj9dxnqa","title":"不如意事十常八九","slug":"不如意事十常八九","date":"2018-08-18T11:29:01.000Z","updated":"2018-08-18T13:01:30.769Z","comments":true,"permalink":"/2018/08/18/不如意事十常八九/","path":"api/articles/不如意事十常八九.json","excerpt":"<h4 id=\"一個人\"><a href=\"#一個人\" class=\"headerlink\" title=\"一個人\"></a>一個人</h4><p>算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。</p>\n<p>只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，當經歷過低潮才懂得之前的美好。從來沒有想過以前的生活是多麽的幸褔，在新的地方，新的環境下生活並不是一件簡單的事情。</p>\n<p>這裹的治安水平並不算太高，搶手機的事情聽到不少。在這邊生活的地方基本上就是公司，宿舍兩點一線。而生活水平還算過得去，公司的伙食雖然不怎麼樣，但周邊還是有點能吃的餐館，基本上中、日、泰、韓的也有，價錢上比香港低一點但低不了不多。</p>\n<p>周邊能去的地方，基本上就周日到超市逛逛，補充一下生活用品。房間沒有電腦，以前在房間玩電腦的習慣己經成為過去。雖然買了一台任天堂 Switch，不過大多是單人遊戲為主，但玩太多的也會生厭。</p>\n<h4 id=\"醉\"><a href=\"#醉\" class=\"headerlink\" title=\"醉\"></a>醉</h4><p><img src=\"/2018/08/18/不如意事十常八九/photo_2018-08-18_20-15-26.jpg\" alt></p>\n<p>如果醉可以忘記，可以解決，可以逃避問題，那是多麼好的事情。</p>\n<blockquote>\n<p>期盼抹去的哀愁  卻更加的愁  。</p>\n</blockquote>\n<p>可是醉了之後，只有宿醉，頭痛，胃痛等問題等著。</p>","keywords":null,"content":null,"text":"一個人算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，當經歷過低潮才懂得之前的美好。從來沒有想過以前的生活是多麽的幸褔，在新的地方，新的環境下生活並不是一件簡單的事情。這裹的治安水平並不算太高，搶手機的事情聽到不","link":"","raw":null,"photos":["/2018/08/18/不如意事十常八九/photo_2018-08-18_18-39-24.jpg"],"source":"_posts/2018/08/18-不如意事十常八九.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjkm395sw0000trnj13oraw9g","title":"Golang 偽鑽石問題","slug":"Golang-Embedding-trap","date":"2018-08-09T11:59:09.000Z","updated":"2018-12-10T11:08:42.291Z","comments":true,"permalink":"/2018/08/09/Golang-Embedding-trap/","path":"api/articles/Golang-Embedding-trap.json","excerpt":"<h1 id=\"Golang-偽鑽石問題\"><a href=\"#Golang-偽鑽石問題\" class=\"headerlink\" title=\"Golang 偽鑽石問題\"></a>Golang 偽鑽石問題</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">\tWriter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.buffer)</span><br><span class=\"line\">    <span class=\"comment\">// ambiguous selector rw.buffer</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 go 之中沒有實現真正的繼承，<code>rw.buffer</code> 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。</p>\n<p>要取得 buffer 就需要指定 <code>rw.Reader.buffer</code> 或 <code>rw.Writer.buffer</code>.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Buffer <span class=\"keyword\">struct</span>&#123; Buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; Buffer &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tBuffer</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.Buffer)</span><br><span class=\"line\">    <span class=\"comment\">// &#123;int:0&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這種寫法就沒有鑽石問題，因為淺層己經有 <code>rw.Buffer</code>，所以 <code></code>rw.Reader.buffer` 不會自動提升。</p>\n<p>不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 <code>Buffer</code>。 所以這種情況下，還是盡量避免使用。</p>\n","keywords":null,"content":null,"text":"Golang 偽鑽石問題1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>type Reader struct&#123; buffer int &#125;<br>type Wr","link":"","raw":null,"photos":["/2018/08/09/Golang-Embedding-trap/cjkewjgb8018b8i5n1doqibdi.1200.jpg"],"source":"_posts/2018/08/09-Golang-Embedding-trap.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]},{"_id":"cjkl3e31n0000tpms4oney5to","title":"DNS故障轉移測試","slug":"DNS-High-Availability","date":"2018-08-08T18:34:05.000Z","updated":"2018-12-10T11:08:42.291Z","comments":true,"permalink":"/2018/08/08/DNS-High-Availability/","path":"api/articles/DNS-High-Availability.json","excerpt":"<p>建立 lookback 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ifconfig lo0 <span class=\"built_in\">alias</span> 127.0.0.2 up</span><br><span class=\"line\">sudo ifconfig lo0 <span class=\"built_in\">alias</span> 127.0.0.3 up</span><br></pre></td></tr></table></figure>\n<p>在 hosts 加入本地 dns 記錄</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/hosts</span><br><span class=\"line\">127.0.0.1 localhost</span><br><span class=\"line\">127.0.0.2 localhost</span><br><span class=\"line\">127.0.0.3 localhost</span><br></pre></td></tr></table></figure>\n<p>在不同終端使用 netcat 建立本地監聽 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lk 127.0.0.1 8080</span><br><span class=\"line\">nc -lk 127.0.0.2 8080</span><br><span class=\"line\">nc -lk 127.0.0.3 8080</span><br></pre></td></tr></table></figure>\n<p>測試傳送信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc localhost 8080</span><br></pre></td></tr></table></figure>\n<p>嘗試關閉不同終端 以測試能不能故障轉移</p>\n","keywords":null,"content":null,"text":"建立 lookback 地址1<br>2<br>sudo ifconfig lo0 alias 127.0.0.2 up<br>sudo ifconfig lo0 alias 127.0.0.3 up<br>在 hosts 加入本地 dns 記錄1<br>2<br>3<br>4<","link":"","raw":null,"photos":["/2018/08/08/DNS-High-Availability/cjkewl4ic018e8i5nkqukol2w.1200.jpg"],"source":"_posts/2018/08/08-DNS-High-Availability.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjkhu5cs50000uftedbmpvgnz","title":"身為男高中生...讀後感","slug":"身為男高中生-讀後感","date":"2018-08-06T12:09:35.000Z","updated":"2018-08-18T13:01:30.765Z","comments":true,"permalink":"/2018/08/06/身為男高中生-讀後感/","path":"api/articles/身為男高中生-讀後感.json","excerpt":"<p>本書全名是《身為男高中生兼當紅輕小說作家的我，正被年紀比我小且從事聲優工作的女同學掐住脖子》(男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている。) 2014年時最長的小說作品名，一共51字呢。</p>\n<p>從書名看起來很像一本校園戀愛故事的輕小說，但現實上並，不，是。這是一本科普文，這本書一共有三集（十集，偽）。</p>\n<p>為什麼說這本書是科普文呢，因為這本說主要說的是輕小說作家出書的經歷和教學。</p>\n<p>引子是主角的小說（作中作）在休學一年期間動漫化，在复學後被身為聲優的同學發現，之後每星期在前往東京的火車上被聊的故事。本中女主角為了引起男主角的注意，因此不斷向男主角提出話題，而話題就是男主角身為作家的工作內容。</p>\n<p>第一，二集主要是在火車上互動，對話中提及大部分作家工作的內容，最後因為女主角被劇透了而掐住脖子www。看到這裹，書本己經提及大部分作家的工作內容，而且脖子也掐，應該完結吧。</p>\n<p><img src=\"https://blog.sukitsuki.com/2018/08/06/身為男高中生-讀後感/photo_2018-08-06_12-05-57.jpg\" alt></p>\n<p>但三個月後又出了第三集，這集從本來的主角第一人稱，改為每章分拆成兩/四小章，男女主角梅花間竹的自白的敍事方式。這集一開始看上去像要回到校園生活故事，但其實還是作家的工作內容，其次是回收伏筆。</p>\n","keywords":null,"content":null,"text":"本書全名是《身為男高中生兼當紅輕小說作家的我，正被年紀比我小且從事聲優工作的女同學掐住脖子》(男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている。) 2014年時最長的小說作品名，一共51字呢。從書名看起來很像一本校園戀愛故","link":"","raw":null,"photos":["/2018/08/06/身為男高中生-讀後感/photo_2018-08-06_12-03-47.jpg"],"source":"_posts/2018/08/06-身為男高中生-讀後感.md","categories":[{"name":"小說","slug":"小說","count":1,"path":"api/categories/小說.json"}],"tags":[]},{"_id":"cjkdzz28z0000rjkx0u710iub","title":"從Gogs遷移到Gitea","slug":"From-gogs-to-gitea","date":"2018-08-03T18:18:01.000Z","updated":"2018-08-18T13:01:30.765Z","comments":true,"permalink":"/2018/08/03/From-gogs-to-gitea/","path":"api/articles/From-gogs-to-gitea.json","excerpt":"<p>Gogs 其實一個升級版本引起奇怪事情，於是順便遷移到 Gitea 上，在 Gitea 官方上建意由 0.9.X 或以前升級會比較方便。</p>\n<p>但我升級到 0.11.X 以上出現問題，所在這記錄一下解決過程。</p>\n<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p>事源於新版 Gogs 加了/修改了 git hook 的處理方法，兼容上出現一些問題。 在推送時出現 hook declined 並被 reject.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! [remote rejected] master -&gt; master (pre-receive hook declined)</span><br></pre></td></tr></table></figure>\n<p>可能的成因是這個hook不再生效或不再兼容了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在 /var/gogs/git/gogs-repositories/&lt;user&gt;/&lt;repo&gt;.git/hooks/pre-receiv</span></span><br><span class=\"line\"><span class=\"comment\">#找到以下內容</span></span><br><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\"><span class=\"string\">\"/app/gogs/gogs\"</span> hook --config=<span class=\"string\">'/data/gogs/conf/app.ini'</span> pre-receive</span><br></pre></td></tr></table></figure>\n<h1 id=\"遷移\"><a href=\"#遷移\" class=\"headerlink\" title=\"遷移\"></a>遷移</h1><p>Gitea 是 Gogs 在 0.9.X 上分支，並後續開發的版本。</p>\n<h2 id=\"使用Docker-作為啟動\"><a href=\"#使用Docker-作為啟動\" class=\"headerlink\" title=\"使用Docker 作為啟動\"></a>使用Docker 作為啟動</h2>","keywords":null,"content":null,"text":"Gogs 其實一個升級版本引起奇怪事情，於是順便遷移到 Gitea 上，在 Gitea 官方上建意由 0.9.X 或以前升級會比較方便。但我升級到 0.11.X 以上出現問題，所在這記錄一下解決過程。起因事源於新版 Gogs 加了/修改了 git hook 的處理方法，兼容上出現","link":"","raw":null,"photos":["/2018/08/03/From-gogs-to-gitea/cjkbrtbs501458i5nw9jtl9m4.jpg"],"source":"_posts/2018/08/03-From-gogs-to-gitea.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjke00vpc0000r4pc3bb16088","title":"GPG-Key","slug":"GPG-key","date":"2018-08-03T15:32:10.000Z","updated":"2018-08-04T10:03:24.706Z","comments":true,"permalink":"/2018/08/03/GPG-key/","path":"api/articles/GPG-key.json","excerpt":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 開啟 GPG sign</span></span><br><span class=\"line\">git config --global commit.gpgsign <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 指定 sign key</span></span><br><span class=\"line\">git config --global user.signingkey &lt;key&gt;</span><br><span class=\"line\"><span class=\"comment\"># 顯示 公鈅列表</span></span><br><span class=\"line\">gpg --list-keys --keyid-format LONG</span><br><span class=\"line\"><span class=\"comment\"># 顯示 私鈅列表</span></span><br><span class=\"line\">gpg --list-secret-keys --keyid-format LONG</span><br><span class=\"line\"><span class=\"comment\"># 生成 Key</span></span><br><span class=\"line\">gpg --full-generate-key</span><br><span class=\"line\"><span class=\"comment\"># 導出公鈅</span></span><br><span class=\"line\">gpg --armor --<span class=\"built_in\">export</span> &lt;key&gt;</span><br><span class=\"line\"><span class=\"comment\"># 導出密鈅</span></span><br><span class=\"line\">gpg --armor --<span class=\"built_in\">export</span>-secret-keys &lt;key&gt;</span><br><span class=\"line\"><span class=\"comment\"># 導出子密鈅</span></span><br><span class=\"line\">gpg --armor --<span class=\"built_in\">export</span>-secret-subkeys &lt;key&gt;</span><br><span class=\"line\"><span class=\"comment\"># 重啟 gpg agent</span></span><br><span class=\"line\">gpg-connect-agent reloadagent /<span class=\"built_in\">bye</span></span><br><span class=\"line\"><span class=\"comment\"># 殺掉 gpg agent</span></span><br><span class=\"line\">gpgconf --<span class=\"built_in\">kill</span> gpg-agent</span><br><span class=\"line\"><span class=\"comment\"># 修改 gpg agent 參數</span></span><br><span class=\"line\">vim ~/.gnupg/gpg-agent.conf</span><br><span class=\"line\">max-cache-ttl 60480000</span><br><span class=\"line\">default-cache-ttl 60480000</span><br></pre></td></tr></table></figure>\n","keywords":null,"content":null,"text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br># 開啟 ","link":"","raw":null,"photos":[],"source":"_posts/2018/08/03-GPG-key.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjkb4enh00000rdnxhm13xlob","title":"Python腳本調整歌詞開始位","slug":"lrc-offset","date":"2018-08-01T19:18:49.000Z","updated":"2018-08-18T13:01:30.765Z","comments":true,"permalink":"/2018/08/01/lrc-offset/","path":"api/articles/lrc-offset.json","excerpt":"<p>#一個 Python 腳本，用作全局調整歌詞提前量/開始位置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br><span class=\"line\" data-line-number=\"12\"></span><br><span class=\"line\" data-line-number=\"13\"></span><br><span class=\"line\" data-line-number=\"14\"></span><br><span class=\"line\" data-line-number=\"15\"></span><br><span class=\"line\" data-line-number=\"16\"></span><br><span class=\"line\" data-line-number=\"17\"></span><br><span class=\"line\" data-line-number=\"18\"></span><br><span class=\"line\" data-line-number=\"19\"></span><br><span class=\"line\" data-line-number=\"20\"></span><br><span class=\"line\" data-line-number=\"21\"></span><br><span class=\"line\" data-line-number=\"22\"></span><br><span class=\"line\" data-line-number=\"23\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> date, datetime, time, timedelta</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(filename: str, offset: int)</span> -&gt; <span class=\"keyword\">None</span>:</span></span><br><span class=\"line\">    thetime = re.compile(<span class=\"string\">r\"\\[([0-9]&#123;2&#125;):([0-9]&#123;2&#125;)\\.([0-9]&#123;2&#125;)?\\](.+)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(filename, <span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file.readlines():</span><br><span class=\"line\">            min_sec_str = thetime.search(line)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> min_sec_str:</span><br><span class=\"line\">                m, s, ms, lrc = min_sec_str.group(<span class=\"number\">1</span>), min_sec_str.group(<span class=\"number\">2</span>), min_sec_str.group(<span class=\"number\">3</span>), min_sec_str.group(<span class=\"number\">4</span>)</span><br><span class=\"line\">                t = datetime.combine(date.today(), time(<span class=\"number\">0</span>, int(m), int(s), int(ms))) + timedelta(milliseconds=offset)</span><br><span class=\"line\">                print(<span class=\"string\">f'[<span class=\"subst\">&#123;t.minute:<span class=\"number\">02</span>&#125;</span>:<span class=\"subst\">&#123;t.second:<span class=\"number\">02</span>&#125;</span>.<span class=\"subst\">&#123;t.microsecond:<span class=\"number\">02</span>&#125;</span>]<span class=\"subst\">&#123;lrc&#125;</span>'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(line)</span><br><span class=\"line\">    file.close</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv) &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> SyntaxError(<span class=\"string\">\"Insufficient arguments.\"</span>)</span><br><span class=\"line\">    main(sys.argv[<span class=\"number\">1</span>], int(sys.argv[<span class=\"number\">2</span>]))</span><br></pre></td></tr></table></figure>\n<p>先用正則找出歌詞位置，再提取出分，秒，微秒和歌詞，</p>\n<p>然後轉換成 Python 的時間類並調整時間，最後打印出來。</p>\n<h1 id=\"正則測試網站\"><a href=\"#正則測試網站\" class=\"headerlink\" title=\"正則測試網站\"></a>正則測試網站</h1><p><a href=\"https://regex101.com/\" target=\"_blank\" rel=\"noopener\">https://regex101.com/</a></p>\n","keywords":null,"content":null,"text":"#一個 Python 腳本，用作全局調整歌詞提前量/開始位置<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>import sys<br>impo","link":"","raw":null,"photos":["/2018/08/01/lrc-offset/photo_2018-07-03_21-21-15.jpg"],"source":"_posts/2018/08/01-lrc-offset.md","categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[]},{"_id":"cjkaqch760000rdm6t3obegeg","title":"Mac 虛擬化","slug":"Mac-Hypervisor","date":"2018-08-01T11:53:59.000Z","updated":"2018-08-18T13:01:30.765Z","comments":true,"permalink":"/2018/08/01/Mac-Hypervisor/","path":"api/articles/Mac-Hypervisor.json","excerpt":"<h1 id=\"Mac-虛擬化管理\"><a href=\"#Mac-虛擬化管理\" class=\"headerlink\" title=\"Mac 虛擬化管理\"></a>Mac 虛擬化管理</h1><h2 id=\"虛擬化\"><a href=\"#虛擬化\" class=\"headerlink\" title=\"虛擬化\"></a>虛擬化</h2><p>在 Linux 世界中，要實現進程/資源分離並不是一件非常困難的事情，從最早的 chroot, 到後來 Google 提出的 cgroups (Control groups), 到後來實用化的 LXC ，或者是系統級虛擬化 KVM,XEN 等。</p>\n<p>相比起 Linux 的 cgroups (2006年), FreeBSD 在更早之前(2000年),就提出過相似的沙箱虛擬化技術 jail, 並且提供不少實用功能，比如打包轉移，虛擬網絡監控等功能。</p>\n<h3 id=\"bhyve-xhyve\"><a href=\"#bhyve-xhyve\" class=\"headerlink\" title=\"bhyve/xhyve\"></a>bhyve/xhyve</h3><p>雖然 jail 能提供像 Docker 的功能，但 Docker 的社群相比 Unix/BSD 社群人數更多，支援也更成熟。為了在Unix上便用 Docker, 但Docker 是基於 Linux 內核開發，要提供內核就只能便用 Virtual Box 等方案，直到 bhyve 的出現（續命。 bhyve 的出現令 Unix 拥有低成本，高效和原生的虛擬化體驗，使用起來更流暢。</p>\n<p>作為師出同門的 Mac 要使用這項技術，因此就出現從BSD bhyve 移植而來的 xhyve. (Mac 內核是從 BSD 原碼上分支而來)</p>\n<h3 id=\"HyperKit\"><a href=\"#HyperKit\" class=\"headerlink\" title=\"HyperKit\"></a>HyperKit</h3><p>HyperKit 是Docker 公司基於 b/xhyve 開發的工具庫，用作提升擴屏性和兼容性的解決方案。現時新版本的 Docker for Mac 就內置了 HyperKit.</p>\n","keywords":null,"content":null,"text":"Mac 虛擬化管理虛擬化在 Linux 世界中，要實現進程/資源分離並不是一件非常困難的事情，從最早的 chroot, 到後來 Google 提出的 cgroups (Control groups), 到後來實用化的 LXC ，或者是系統級虛擬化 KVM,XEN 等。相比起 Li","link":"","raw":null,"photos":["/2018/08/01/Mac-Hypervisor/cjk84ozko000c8i5nmlk52wsl.jpg"],"source":"_posts/2018/08/01-Mac-Hypervisor.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjk10tqv60000rjqbywt8gx5k","title":"ServerUpdate","slug":"ServerUpdate","date":"2018-07-25T14:11:07.000Z","updated":"2018-07-25T11:03:21.723Z","comments":true,"permalink":"/2018/07/25/ServerUpdate/","path":"api/articles/ServerUpdate.json","excerpt":"<h1 id=\"服務器更新\"><a href=\"#服務器更新\" class=\"headerlink\" title=\"服務器更新\"></a>服務器更新</h1><p>今天把Debian滾到 9.5 內核升到 4.9, 因為Linux 4.9內核內建了tcp_bbr 算法。</p>\n<p>這算法對高延遲，高掉包的網絡有較大的提升</p>\n<p>不過香港的掉包和延遲不算嚴重，更新後提升不大</p>\n<h2 id=\"配置kernal-參數\"><a href=\"#配置kernal-參數\" class=\"headerlink\" title=\"配置kernal 參數\"></a>配置kernal 參數</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"comment\"># 增加以下兩條配置</span></span><br><span class=\"line\"><span class=\"comment\"># net.core.default_qdisc=fq</span></span><br><span class=\"line\"><span class=\"comment\"># net.ipv4.tcp_congestion_control=bbr</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"刷新內核配置\"><a href=\"#刷新內核配置\" class=\"headerlink\" title=\"刷新內核配置\"></a>刷新內核配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sysctl -p</span><br></pre></td></tr></table></figure>\n<h2 id=\"重啟和測試配置\"><a href=\"#重啟和測試配置\" class=\"headerlink\" title=\"重啟和測試配置\"></a>重啟和測試配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ reboot</span><br><span class=\"line\">$ sysctl net.ipv4.tcp_available_congestion_control</span><br><span class=\"line\"><span class=\"comment\"># 顯示結果中有bbr</span></span><br><span class=\"line\"><span class=\"comment\"># net.ipv4.tcp_available_congestion_control = bbr cubic reno</span></span><br></pre></td></tr></table></figure>","keywords":null,"content":null,"text":"服務器更新今天把Debian滾到 9.5 內核升到 4.9, 因為Linux 4.9內核內建了tcp_bbr 算法。這算法對高延遲，高掉包的網絡有較大的提升不過香港的掉包和延遲不算嚴重，更新後提升不大配置kernal 參數1<br>2<br>3<br>4<br>$ vim /et","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/25/ServerUpdate/cjk0s2e3n00058i5n2cg1ayq9.jpg"],"source":"_posts/2018/07/25-ServerUpdate.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjjr4j2zp0000r7mggj09jyh4","title":"Python爬蟲","slug":"Python爬蟲","date":"2018-07-18T19:24:50.000Z","updated":"2018-07-18T12:49:24.377Z","comments":true,"permalink":"/2018/07/18/Python爬蟲/","path":"api/articles/Python爬蟲.json","excerpt":"<p>簡易Python 爬蟲</p>\n<p>使用request提取網頁，再用bs4分析取得到html， 最後用urllib保存文件</p>\n<p>requests預設encoding很大機會是iso-8859-1</p>\n<p>所以在提取text之前需要修改成 <code>html.encoding = &#39;UTF-8&#39;</code></p>\n<p><code>range(1, int(numbers))</code> 是返會 <code>[1.....numbers-1]</code>  所以要使用 <code>range(1, int(numbers)+1)</code></p>\n<p>Python 沒有 <code>+=</code> 的寫法，合併Array只能 <code>array = array + [....]</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">author = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_epub</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'#epub'</span> <span class=\"keyword\">in</span> url[<span class=\"string\">'href'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    booklist = []</span><br><span class=\"line\">    URL = <span class=\"string\">f\"https://tw.ixdzs.com/author/<span class=\"subst\">&#123;author&#125;</span>\"</span></span><br><span class=\"line\">    html = requests.get(URL)</span><br><span class=\"line\">    html.encoding = <span class=\"string\">'UTF-8'</span></span><br><span class=\"line\">    soup = BeautifulSoup(html.text, <span class=\"string\">'lxml'</span>)</span><br><span class=\"line\">    number = soup.find_all(<span class=\"string\">'a'</span>, title=<span class=\"string\">\"最後一頁\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    numbers = re.search(<span class=\"string\">r'page=(\\d+)$'</span>, number[<span class=\"string\">'href'</span>]).group(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> list(range(<span class=\"number\">1</span>, int(numbers)+<span class=\"number\">1</span>)):</span><br><span class=\"line\">        URL = <span class=\"string\">f\"https://tw.ixdzs.com/author/<span class=\"subst\">&#123;author&#125;</span>?page=<span class=\"subst\">&#123;num&#125;</span>\"</span></span><br><span class=\"line\">        html = requests.get(URL)</span><br><span class=\"line\">        html.encoding = <span class=\"string\">'UTF-8'</span></span><br><span class=\"line\">        soup = BeautifulSoup(html.text, <span class=\"string\">'lxml'</span>)</span><br><span class=\"line\">        booklist = booklist + soup.find_all(<span class=\"string\">'a'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    urllist = filter(is_epub, booklist)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(author):</span><br><span class=\"line\">        os.makedirs(author)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> url <span class=\"keyword\">in</span> tqdm(list(urllist)):</span><br><span class=\"line\">        book_id = re.search(<span class=\"string\">r'/d/\\d+/(\\d+)/#epub_down'</span>, url[<span class=\"string\">'href'</span>]).group(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            title = re.search(<span class=\"string\">r'(.*)epub下載'</span>, url[<span class=\"string\">'title'</span>]).group(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            print(url[<span class=\"string\">'title'</span>])</span><br><span class=\"line\">            title = url[<span class=\"string\">'title'</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">f\"<span class=\"subst\">&#123;author&#125;</span>/<span class=\"subst\">&#123;title&#125;</span>.epub\"</span>):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        urllib.request.urlretrieve(</span><br><span class=\"line\">            <span class=\"string\">f'https://tw.ixdzs.com/down/<span class=\"subst\">&#123;book_id&#125;</span>_4'</span>, <span class=\"string\">f'<span class=\"subst\">&#123;author&#125;</span>/<span class=\"subst\">&#123;title&#125;</span>.epub'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    print(sys.argv)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> SyntaxError(<span class=\"string\">\"Insufficient arguments.\"</span>)</span><br><span class=\"line\">    author = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n","keywords":null,"content":null,"text":"簡易Python 爬蟲使用request提取網頁，再用bs4分析取得到html， 最後用urllib保存文件requests預設encoding很大機會是iso-8859-1所以在提取text之前需要修改成 html.encoding = &#39;UTF-8&#39;range","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/07/18/Python爬蟲/photo_2018-07-09_10-59-23.jpg"],"source":"_posts/2018/07/18-Python爬蟲.md","categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[]}]}