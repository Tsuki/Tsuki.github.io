{"total":57,"pageSize":10,"pageCount":6,"data":[{"_id":"cjmklhtpp0000tsqjzf8qt81h","title":"Casbin-訪問權限控制工具","slug":"casbin-訪問權限控制工具","date":"2018-09-26T20:51:25.000Z","updated":"2018-09-27T13:08:43.994Z","comments":true,"permalink":"/2018/09/26/casbin-訪問權限控制工具/","path":"api/articles/casbin-訪問權限控制工具.json","excerpt":"","keywords":null,"content":"<p>Casbin 本質是一個配對的權限的工具庫，主要是由 model 模型和 policy 政策組成，</p>\n<p>model example</p>\n<p>r 是接受傳入的參數並定義欄位，例子中接受三項參數</p>\n<p>p 是解析 Prolicy 內容並定義欄位</p>\n<p>m 是配對 Policy 方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[request_definition]</span><br><span class=\"line\">r = sub, obj, act</span><br><span class=\"line\"></span><br><span class=\"line\">[policy_definition]</span><br><span class=\"line\">p = sub, obj, act</span><br><span class=\"line\"></span><br><span class=\"line\">[policy_effect]</span><br><span class=\"line\">e = some(where (p.eft == allow))</span><br><span class=\"line\"></span><br><span class=\"line\">[matchers]</span><br><span class=\"line\">m = (p.sub in r.sub || p.sub == &quot;*&quot;) &amp;&amp; keyMatch(r.obj, p.obj) &amp;&amp; (r.act == p.act || p.act == &quot;*&quot;)</span><br></pre></td></tr></table></figure>\n<p>policy example </p>\n<p>ps:雖然是csv格式 但需要在逗號後留空白，別外內容的空白是會保留，不要因為對齊而加padding</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p, *, /info, GET</span><br><span class=\"line\">p, user, /users, GET</span><br><span class=\"line\">p, user, /users, POST</span><br><span class=\"line\">p, setting, /settings, *</span><br></pre></td></tr></table></figure>\n","text":"Casbin 本質是一個配對的權限的工具庫，主要是由 model 模型和 policy 政策組成，model exampler 是接受傳入的參數並定義欄位，例子中接受三項參數p 是解析 Prolicy 內容並定義欄位m 是配對 Policy 方式<br><br><br><br><","link":"","raw":null,"photos":["/2018/09/26/casbin-訪問權限控制工具/anime-love-live-sunshine-a9-1280x720.jpg"],"source":"_posts/2018/09/26-casbin-訪問權限控制工具.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]},{"_id":"cjmg3xrq30000ttmo9c172s81","title":"刪了Xcode後不能使用make等指令","slug":"刪了xcode後不能使用make等指令","date":"2018-09-24T17:43:26.000Z","updated":"2018-09-27T13:08:43.994Z","comments":true,"permalink":"/2018/09/24/刪了xcode後不能使用make等指令/","path":"api/articles/刪了xcode後不能使用make等指令.json","excerpt":"","keywords":null,"content":"<p>如果出現以下內容</p>\n<blockquote>\n<p>xcrun: error: active developer path (“/Applications/Xcode.app/Contents/Developer”) does not exist</p>\n</blockquote>\n<p>輸入 <code>sudo xcode-select -s /Library/Developer/CommandLineTools</code> 改回使用 CommandLineTools 的路徑</p>\n","text":"如果出現以下內容xcrun: error: active developer path (“/Applications/Xcode.app/Contents/Developer”) does not exist輸入 sudo xcode-select -s /Library/De","link":"","raw":null,"photos":[],"source":"_posts/2018/09/24-刪了xcode後不能使用make等指令.md","categories":[{"name":"ops","slug":"ops","count":1,"path":"api/categories/ops.json"}],"tags":[]},{"_id":"cjmbv10s30000tso75ms0x3o4","title":"前端好用的模糊搜索工具","slug":"前端好用的模糊搜索工具","date":"2018-09-21T17:55:43.000Z","updated":"2018-09-21T10:25:31.993Z","comments":true,"permalink":"/2018/09/21/前端好用的模糊搜索工具/","path":"api/articles/前端好用的模糊搜索工具.json","excerpt":"","keywords":null,"content":"<p><a href=\"https://github.com/krisk/fuse\" target=\"_blank\" rel=\"noopener\">https://github.com/krisk/fuse</a></p>\n<p><a href=\"http://fusejs.io/\" target=\"_blank\" rel=\"noopener\">http://fusejs.io/</a></p>\n<p>在處理表單的全文搜索，很常都要對不同欄位過濾，用了Fuse.js就可以少寫很多代碼。</p>\n<p>Fuse.js 除了支持指定欄位/嵌套 Json，還支持比重搜索和 Bitap 算法提供一定近似匹配的功能。</p>\n<p><a href=\"http://fusejs.io/#examples\" target=\"_blank\" rel=\"noopener\">http://fusejs.io/#examples</a></p>\n","text":"https://github.com/krisk/fusehttp://fusejs.io/在處理表單的全文搜索，很常都要對不同欄位過濾，用了Fuse.js就可以少寫很多代碼。Fuse.js 除了支持指定欄位/嵌套 Json，還支持比重搜索和 Bitap 算法提供一定近似匹配的功","link":"","raw":null,"photos":["/2018/09/21/前端好用的模糊搜索工具/anime-touhou-sagume-kishin-wings-dz-1280x720.jpg"],"source":"_posts/2018/09/21-前端好用的模糊搜索工具.md","categories":[{"name":"Front-end","slug":"Front-end","count":4,"path":"api/categories/Front-end.json"},{"name":"JavaScript","slug":"Front-end/JavaScript","count":2,"path":"api/categories/Front-end/JavaScript.json"}],"tags":[]},{"_id":"cjmal22370000tpnyeodvqbc1","title":"SQL語法中的過濾方法","slug":"SQL語法中的過濾方法","date":"2018-09-20T20:17:49.000Z","updated":"2018-09-20T12:58:44.135Z","comments":true,"permalink":"/2018/09/20/SQL語法中的過濾方法/","path":"api/articles/SQL語法中的過濾方法.json","excerpt":"","keywords":null,"content":"<p>在統計系統中，很常用到不同維度的分類和過澽，</p>\n<p>比如按類加總/平均等等</p>\n<table>\n<thead>\n<tr>\n<th>Id</th>\n<th>Gender</th>\n<th>Salary</th>\n<th>Country</th>\n<th>Position</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>M</td>\n<td>1000</td>\n<td>China</td>\n<td>Software</td>\n<td>working</td>\n</tr>\n<tr>\n<td>2</td>\n<td>F</td>\n<td>2000</td>\n<td>USA</td>\n<td>Software</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>3</td>\n<td>M</td>\n<td>5000</td>\n<td>UK</td>\n<td>Hardware</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>4</td>\n<td>F</td>\n<td>4000</td>\n<td>Germany</td>\n<td>Hardware</td>\n<td>working</td>\n</tr>\n<tr>\n<td>5</td>\n<td>M</td>\n<td>5000</td>\n<td>USA</td>\n<td>Admin</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>6</td>\n<td>F</td>\n<td>4000</td>\n<td>Germany</td>\n<td>Admin</td>\n<td>holiday</td>\n</tr>\n</tbody>\n</table>\n<p>如果在上要一次過找出Admin和非Admin人員的平均Salary可以在 SQL中用 filter 或 case</p>\n<p>PostgreSQL</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">avg</span>(salary) filter (<span class=\"keyword\">where</span> <span class=\"keyword\">position</span> = <span class=\"string\">'admin'</span>)  <span class=\"keyword\">as</span> admin_avg_salary,</span><br><span class=\"line\">       <span class=\"keyword\">avg</span>(salary) filter (<span class=\"keyword\">where</span> <span class=\"keyword\">position</span> &lt;&gt; <span class=\"string\">'admin'</span>) <span class=\"keyword\">as</span> non_admin_avg_salary</span><br><span class=\"line\"><span class=\"keyword\">from</span> raw_data</span><br></pre></td></tr></table></figure>\n<p>MySQL</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">avg</span>(salary <span class=\"keyword\">CASE</span></span><br><span class=\"line\">                    <span class=\"keyword\">WHEN</span> <span class=\"keyword\">position</span> = <span class=\"string\">'admin'</span> <span class=\"keyword\">THEN</span> salary</span><br><span class=\"line\">                    <span class=\"keyword\">ELSE</span> <span class=\"number\">0</span> <span class=\"keyword\">END</span>) <span class=\"keyword\">as</span> admin_avg_salary,</span><br><span class=\"line\">       <span class=\"keyword\">avg</span>(salary <span class=\"keyword\">CASE</span></span><br><span class=\"line\">                    <span class=\"keyword\">WHEN</span> <span class=\"keyword\">position</span> &lt;&gt; <span class=\"string\">'admin'</span> <span class=\"keyword\">THEN</span> salary</span><br><span class=\"line\">                    <span class=\"keyword\">ELSE</span> <span class=\"number\">0</span> <span class=\"keyword\">END</span>) <span class=\"keyword\">as</span> non_admin_avg_salary</span><br><span class=\"line\"><span class=\"keyword\">from</span> raw_data</span><br></pre></td></tr></table></figure>\n","text":"在統計系統中，很常用到不同維度的分類和過澽，比如按類加總/平均等等IdGenderSalaryCountryPositionStatus1M1000ChinaSoftwareworking2F2000USASoftwareholiday3M5000UKHardwareholida","link":"","raw":null,"photos":["/2018/09/20/SQL語法中的過濾方法/121654695498494.jpg"],"source":"_posts/2018/09/20-SQL語法中的過濾方法.md","categories":[{"name":"SQL","slug":"SQL","count":2,"path":"api/categories/SQL.json"}],"tags":[]},{"_id":"cjlenu7du0000u5ms981wunyh","title":"gorm兼容net.IP類","slug":"gorm兼容net-IP類","date":"2018-08-29T12:04:38.000Z","updated":"2018-08-29T06:37:22.933Z","comments":true,"permalink":"/2018/08/29/gorm兼容net-IP類/","path":"api/articles/gorm兼容net-IP類.json","excerpt":"","keywords":null,"content":"<p>首先 alias net.IP類到本地包，為之後實作方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> IP net.IP</span><br></pre></td></tr></table></figure>\n<p>因為pg不能直接使用<code>[]byte</code>作為輸入，所以需要實作<code>Value()</code>令Gorm 能轉換成字串作為輸入。</p>\n<p>先從自定義的 <code>IP</code> 類轉換回 <code>net.IP</code> 類，再用 <code>String()</code> 轉成字串。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a IP)</span> <span class=\"title\">Value</span><span class=\"params\">()</span> <span class=\"params\">(driver.Value, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> net.IP(a).String(), <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 別外，由於從pg 內讀取出來的是 <code>[]unit8</code> 類，內部數據是 ASIIC 碼，所以先轉換成 byte合併成 Array 再轉成 string.</p>\n<p> 最後用 net 庫內的 ParseIP 方法 轉成 IP 類，之後再 cast 成自定義的 IP 類 返回。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br><span class=\"line\" data-line-number=\"12\"></span><br><span class=\"line\" data-line-number=\"13\"></span><br><span class=\"line\" data-line-number=\"14\"></span><br><span class=\"line\" data-line-number=\"15\"></span><br><span class=\"line\" data-line-number=\"16\"></span><br><span class=\"line\" data-line-number=\"17\"></span><br><span class=\"line\" data-line-number=\"18\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> IP net.IP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a *IP)</span> <span class=\"title\">Scan</span><span class=\"params\">(src <span class=\"keyword\">interface</span>&#123;&#125;)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> x := src.(<span class=\"keyword\">type</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> []<span class=\"keyword\">uint8</span>:</span><br><span class=\"line\">\t\t*a = IP(net.ParseIP(<span class=\"keyword\">string</span>(x)))</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"literal\">nil</span>:</span><br><span class=\"line\">\t\t*a = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">\"pq: cannot convert %T to net.IP\"</span>, src)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a IP)</span> <span class=\"title\">Value</span><span class=\"params\">()</span> <span class=\"params\">(driver.Value, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> net.IP(a).String(), <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"首先 alias net.IP類到本地包，為之後實作方法。<br>type IP net.IP<br>因為pg不能直接使用[]byte作為輸入，所以需要實作Value()令Gorm 能轉換成字串作為輸入。先從自定義的 IP 類轉換回 net.IP 類，再用 String() 轉成","link":"","raw":null,"photos":["/2018/08/29/gorm兼容net-IP類/photo_2018-08-29_12-08-58.jpg"],"source":"_posts/2018/08/29-gorm兼容net-IP類.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]},{"_id":"cjlcicwtm0000u0mppnj5f5mq","title":"Diablo2打寶","slug":"Diablo2打寶","date":"2018-08-28T00:11:54.000Z","updated":"2018-08-27T16:39:02.018Z","comments":true,"permalink":"/2018/08/28/Diablo2打寶/","path":"api/articles/Diablo2打寶.json","excerpt":"","keywords":null,"content":"<h3 id=\"刷刷刷\"><a href=\"#刷刷刷\" class=\"headerlink\" title=\"刷刷刷\"></a>刷刷刷</h3><p>在飛了三天槌子後，今天（27號），終於打了喬丹之石，而且還是連出兩粒。第二粒在最後一把出的，別外還刷到接近頂值的馬拉的萬花筒（19抗性），實在太令人高興了。</p>\n<p>這兩天把裝備提升，先刷到撒卡蘭姆使者，再刷到橡樹之心符文，在崔凡特己經可以穩定刷下去，但秘密母牛關還是有點壓力，而且刷起來不太效率。</p>\n<p>在刷了好喬丹後，之後的喬丹之石就可以拿來開地表暗黑破壞神，玩了這麼多年還沒打過這隻呢。</p>\n<p>之後去刷無限符文好還是謎團符文好呢？</p>\n","text":"刷刷刷在飛了三天槌子後，今天（27號），終於打了喬丹之石，而且還是連出兩粒。第二粒在最後一把出的，別外還刷到接近頂值的馬拉的萬花筒（19抗性），實在太令人高興了。這兩天把裝備提升，先刷到撒卡蘭姆使者，再刷到橡樹之心符文，在崔凡特己經可以穩定刷下去，但秘密母牛關還是有點壓力，而且刷","link":"","raw":null,"photos":["/2018/08/28/Diablo2打寶/cjkewc6ah017y8i5nkovypyyw.1200.jpg"],"source":"_posts/2018/08/28-Diablo2打寶.md","categories":[{"name":"遊戲","slug":"遊戲","count":2,"path":"api/categories/遊戲.json"}],"tags":[]},{"_id":"cjl7zuctz0000tvuhawty753q","title":"暗黑破壞神","slug":"Diablo2","date":"2018-08-24T20:18:10.000Z","updated":"2018-08-24T12:51:55.780Z","comments":true,"permalink":"/2018/08/24/Diablo2/","path":"api/articles/Diablo2.json","excerpt":"<h4 id=\"暗黑破壞神-2\"><a href=\"#暗黑破壞神-2\" class=\"headerlink\" title=\"暗黑破壞神 2\"></a>暗黑破壞神 2</h4><p>這個快二十多年的遊戲，想到不今時今日還有不少人在玩，在YouTube 上還有不少人上傳/直播打寶。現在官服還在維護，今天六月時天梯還有重置，而且還有不少玩家在線。</p>\n<h4 id=\"私服\"><a href=\"#私服\" class=\"headerlink\" title=\"私服\"></a>私服</h4><p>現在D2除了正服外，還有不少私服，這些私服各有特色，有些是和正服一樣，有些是PVP服，還有倍率服。對於沒有時間或想重投D2的懷舊玩家來說，是不錯的選擇。</p>\n<h4 id=\"角色\"><a href=\"#角色\" class=\"headerlink\" title=\"角色\"></a>角色</h4><p>當年第一個玩的角色，沒記錯應該是死靈法師，那時覺得帶著一大隊小弟，在單人模式上會輕鬆。現實上死靈法師在地獄難度之前，難易度是滿低的。</p>\n<p>其次玩的是法師吧，法師的傳送是D2打寶的關建，除非有迷團甲。但迷團是相當高級的符文組，當年我連眼光都沒合成過，更別說迷團，那時拿的只是双精神，而且得用塔盾的精神。</p>\n<p>現在重玩一下私服，就先練了個祝槌聖騎。雖然不算最好用的角式，但是是最易上手和最安全的角色。</p>\n<h4 id=\"最後\"><a href=\"#最後\" class=\"headerlink\" title=\"最後\"></a>最後</h4><p>不小心把黑吉德賣了啊！！！！好想要SOJ啊！！！我還沒打過地表和三王啊！！！！！</p>","keywords":null,"content":null,"text":"暗黑破壞神 2這個快二十多年的遊戲，想到不今時今日還有不少人在玩，在YouTube 上還有不少人上傳/直播打寶。現在官服還在維護，今天六月時天梯還有重置，而且還有不少玩家在線。私服現在D2除了正服外，還有不少私服，這些私服各有特色，有些是和正服一樣，有些是PVP服，還有倍率服。對","link":"","raw":null,"photos":["/2018/08/24/Diablo2/cjkewokd0018k8i5nmjbn075f.1200.jpg"],"source":"_posts/2018/08/24-Diablo2.md","categories":[{"name":"遊戲","slug":"遊戲","count":2,"path":"api/categories/遊戲.json"}],"tags":[]},{"_id":"cjl297e6e0000u4noni3wptzk","title":"Docker清理","slug":"Docker清理","date":"2018-08-20T20:01:56.000Z","updated":"2018-08-20T12:25:09.461Z","comments":true,"permalink":"/2018/08/20/Docker清理/","path":"api/articles/Docker清理.json","excerpt":"<h3 id=\"查看已使用空間\"><a href=\"#查看已使用空間\" class=\"headerlink\" title=\"查看已使用空間\"></a>查看已使用空間</h3><blockquote>\n<p>docker system df</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class=\"line\">Images              17                  15                  5.531GB             1.822GB (32%)</span><br><span class=\"line\">Containers          20                  1                   251.6MB             212.2MB (84%)</span><br><span class=\"line\">Local Volumes       42                  17                  1.09GB              174.5MB (16%)</span><br><span class=\"line\">Build Cache         0                   0                   0B                  0B</span><br></pre></td></tr></table></figure>\n<h3 id=\"清理空間\"><a href=\"#清理空間\" class=\"headerlink\" title=\"清理空間\"></a>清理空間</h3><p>Remove local volumes not used by at least one container - 沒有在使用的空間</p>\n<blockquote>\n<p>docker volume prune</p>\n</blockquote>\n<h3 id=\"清理容器\"><a href=\"#清理容器\" class=\"headerlink\" title=\"清理容器\"></a>清理容器</h3><p>Remove all stopped containers - 己停用的容器</p>\n<blockquote>\n<p>docker container prune</p>\n</blockquote>\n<h3 id=\"清理影像\"><a href=\"#清理影像\" class=\"headerlink\" title=\"清理影像\"></a>清理影像</h3>","keywords":null,"content":null,"text":"查看已使用空間docker system df<br><br><br><br><br>TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE<br>Im","link":"","raw":null,"photos":["/2018/08/20/Docker清理/3GtH1bB.jpg"],"source":"_posts/2018/08/20-Docker清理.md","categories":[{"name":"Ops","slug":"Ops","count":6,"path":"api/categories/Ops.json"}],"tags":[]},{"_id":"cjkzfmclx0000tup6bj9dxnqa","title":"不如意事十常八九","slug":"不如意事十常八九","date":"2018-08-18T11:29:01.000Z","updated":"2018-08-18T13:01:30.769Z","comments":true,"permalink":"/2018/08/18/不如意事十常八九/","path":"api/articles/不如意事十常八九.json","excerpt":"<h4 id=\"一個人\"><a href=\"#一個人\" class=\"headerlink\" title=\"一個人\"></a>一個人</h4><p>算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。</p>\n<p>只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，當經歷過低潮才懂得之前的美好。從來沒有想過以前的生活是多麽的幸褔，在新的地方，新的環境下生活並不是一件簡單的事情。</p>\n<p>這裹的治安水平並不算太高，搶手機的事情聽到不少。在這邊生活的地方基本上就是公司，宿舍兩點一線。而生活水平還算過得去，公司的伙食雖然不怎麼樣，但周邊還是有點能吃的餐館，基本上中、日、泰、韓的也有，價錢上比香港低一點但低不了不多。</p>\n<p>周邊能去的地方，基本上就周日到超市逛逛，補充一下生活用品。房間沒有電腦，以前在房間玩電腦的習慣己經成為過去。雖然買了一台任天堂 Switch，不過大多是單人遊戲為主，但玩太多的也會生厭。</p>\n<h4 id=\"醉\"><a href=\"#醉\" class=\"headerlink\" title=\"醉\"></a>醉</h4><p><img src=\"/2018/08/18/不如意事十常八九/photo_2018-08-18_20-15-26.jpg\" alt=\"\"></p>\n<p>如果醉可以忘記，可以解決，可以逃避問題，那是多麼好的事情。</p>\n<blockquote>\n<p>期盼抹去的哀愁  卻更加的愁  。</p>\n</blockquote>\n<p>可是醉了之後，只有宿醉，頭痛，胃痛等問題等著。</p>","keywords":null,"content":null,"text":"一個人算下來己經一個人生活了四個月了，感覺習慣嗎？並沒有。只有在其實地方生活過，才會知道以前的好。感覺生活上一直在開倒車，當經歷過低潮才懂得之前的美好。從來沒有想過以前的生活是多麽的幸褔，在新的地方，新的環境下生活並不是一件簡單的事情。這裹的治安水平並不算太高，搶手機的事情聽到不","link":"","raw":null,"photos":["/2018/08/18/不如意事十常八九/photo_2018-08-18_18-39-24.jpg"],"source":"_posts/2018/08/18-不如意事十常八九.md","categories":[{"name":"日記","slug":"日記","count":20,"path":"api/categories/日記.json"}],"tags":[]},{"_id":"cjkm395sw0000trnj13oraw9g","title":"Golang 偽鑽石問題","slug":"Golang-Embedding-trap","date":"2018-08-09T11:59:09.000Z","updated":"2018-12-10T11:08:42.291Z","comments":true,"permalink":"/2018/08/09/Golang-Embedding-trap/","path":"api/articles/Golang-Embedding-trap.json","excerpt":"","keywords":null,"content":"<h1 id=\"Golang-偽鑽石問題\"><a href=\"#Golang-偽鑽石問題\" class=\"headerlink\" title=\"Golang 偽鑽石問題\"></a>Golang 偽鑽石問題</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">\tWriter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.buffer)</span><br><span class=\"line\">    <span class=\"comment\">// ambiguous selector rw.buffer</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 go 之中沒有實現真正的繼承，<code>rw.buffer</code> 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。</p>\n<p>要取得 buffer 就需要指定 <code>rw.Reader.buffer</code> 或 <code>rw.Writer.buffer</code>.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Buffer <span class=\"keyword\">struct</span>&#123; Buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; Buffer &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tBuffer</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.Buffer)</span><br><span class=\"line\">    <span class=\"comment\">// &#123;int:0&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這種寫法就沒有鑽石問題，因為淺層己經有 <code>rw.Buffer</code>，所以 <code></code>rw.Reader.buffer` 不會自動提升。</p>\n<p>不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 <code>Buffer</code>。 所以這種情況下，還是盡量避免使用。</p>\n","text":"Golang 偽鑽石問題1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>type Reader struct&#123; buffer int &#125;<br>type Wr","link":"","raw":null,"photos":["/2018/08/09/Golang-Embedding-trap/cjkewjgb8018b8i5n1doqibdi.1200.jpg"],"source":"_posts/2018/08/09-Golang-Embedding-trap.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]}]}