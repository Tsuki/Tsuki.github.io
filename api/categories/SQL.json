{"name":"SQL","slug":"SQL","count":2,"postlist":[{"_id":"cjmal22370000tpnyeodvqbc1","title":"SQL語法中的過濾方法","slug":"SQL語法中的過濾方法","date":"2018-09-20T20:17:49.000Z","updated":"2018-09-20T12:58:44.135Z","comments":true,"permalink":"/2018/09/20/SQL語法中的過濾方法/","path":"api/articles/SQL語法中的過濾方法.json","excerpt":"","keywords":null,"content":"<p>在統計系統中，很常用到不同維度的分類和過澽，</p>\n<p>比如按類加總/平均等等</p>\n<table>\n<thead>\n<tr>\n<th>Id</th>\n<th>Gender</th>\n<th>Salary</th>\n<th>Country</th>\n<th>Position</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>M</td>\n<td>1000</td>\n<td>China</td>\n<td>Software</td>\n<td>working</td>\n</tr>\n<tr>\n<td>2</td>\n<td>F</td>\n<td>2000</td>\n<td>USA</td>\n<td>Software</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>3</td>\n<td>M</td>\n<td>5000</td>\n<td>UK</td>\n<td>Hardware</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>4</td>\n<td>F</td>\n<td>4000</td>\n<td>Germany</td>\n<td>Hardware</td>\n<td>working</td>\n</tr>\n<tr>\n<td>5</td>\n<td>M</td>\n<td>5000</td>\n<td>USA</td>\n<td>Admin</td>\n<td>holiday</td>\n</tr>\n<tr>\n<td>6</td>\n<td>F</td>\n<td>4000</td>\n<td>Germany</td>\n<td>Admin</td>\n<td>holiday</td>\n</tr>\n</tbody>\n</table>\n<p>如果在上要一次過找出Admin和非Admin人員的平均Salary可以在 SQL中用 filter 或 case</p>\n<p>PostgreSQL</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">avg</span>(salary) filter (<span class=\"keyword\">where</span> <span class=\"keyword\">position</span> = <span class=\"string\">'admin'</span>)  <span class=\"keyword\">as</span> admin_avg_salary,</span><br><span class=\"line\">       <span class=\"keyword\">avg</span>(salary) filter (<span class=\"keyword\">where</span> <span class=\"keyword\">position</span> &lt;&gt; <span class=\"string\">'admin'</span>) <span class=\"keyword\">as</span> non_admin_avg_salary</span><br><span class=\"line\"><span class=\"keyword\">from</span> raw_data</span><br></pre></td></tr></table></figure>\n<p>MySQL</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">avg</span>(salary <span class=\"keyword\">CASE</span></span><br><span class=\"line\">                    <span class=\"keyword\">WHEN</span> <span class=\"keyword\">position</span> = <span class=\"string\">'admin'</span> <span class=\"keyword\">THEN</span> salary</span><br><span class=\"line\">                    <span class=\"keyword\">ELSE</span> <span class=\"number\">0</span> <span class=\"keyword\">END</span>) <span class=\"keyword\">as</span> admin_avg_salary,</span><br><span class=\"line\">       <span class=\"keyword\">avg</span>(salary <span class=\"keyword\">CASE</span></span><br><span class=\"line\">                    <span class=\"keyword\">WHEN</span> <span class=\"keyword\">position</span> &lt;&gt; <span class=\"string\">'admin'</span> <span class=\"keyword\">THEN</span> salary</span><br><span class=\"line\">                    <span class=\"keyword\">ELSE</span> <span class=\"number\">0</span> <span class=\"keyword\">END</span>) <span class=\"keyword\">as</span> non_admin_avg_salary</span><br><span class=\"line\"><span class=\"keyword\">from</span> raw_data</span><br></pre></td></tr></table></figure>\n","text":"在統計系統中，很常用到不同維度的分類和過澽，比如按類加總/平均等等IdGenderSalaryCountryPositionStatus1M1000ChinaSoftwareworking2F2000USASoftwareholiday3M5000UKHardwareholida","link":"","raw":null,"photos":["/2018/09/20/SQL語法中的過濾方法/121654695498494.jpg"],"source":"_posts/2018/09/20-SQL語法中的過濾方法.md","categories":[{"name":"SQL","slug":"SQL","count":2,"path":"api/categories/SQL.json"}],"tags":[]},{"_id":"cjnain3wr0000u4pl9backu10","title":"在PostgresSQL啟用不區分大小寫欄位","slug":"在PostgresSQL啟用不區分大小寫欄位","date":"2018-10-15T17:53:24.000Z","updated":"2018-10-15T16:31:00.862Z","comments":true,"permalink":"/2018/10/15/在PostgresSQL啟用不區分大小寫欄位/","path":"api/articles/在PostgresSQL啟用不區分大小寫欄位.json","excerpt":"<p>在PostgreSQL 上建立欄位約束，是很簡單的事情，</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">users</span> (  </span><br><span class=\"line\">  <span class=\"keyword\">id</span>     <span class=\"keyword\">uuid</span> PRIMARY <span class=\"keyword\">KEY</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> uuid_generate_v4(),</span><br><span class=\"line\">  email  <span class=\"built_in\">text</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>我們只需要在表的欄位上加入唯一約束就可以，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> email_unique <span class=\"keyword\">UNIQUE</span> (email);</span><br></pre></td></tr></table></figure>\n<p>但在特殊情況下，我們需要不區分大少寫的欄位，比如用戶表等。。。剛剛那種約速方法就不再有效，因為PostgreSQL 預設是大小寫區分的。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> (email) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'test@example.com'</span>);  </span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> (email) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'TEST@example.com'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> <span class=\"keyword\">users</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                  id                  |      email       </span><br><span class=\"line\"><span class=\"comment\">--------------------------------------+------------------</span></span><br><span class=\"line\"> ccfcddd2-bdc5-4cf4-9475-4171960e6262 | test@example.com</span><br><span class=\"line\"> 431308b4-8df8-44c9-bed4-7c44cf4e1ec1 | TEST@example.com</span><br><span class=\"line\">(2 rows)</span><br></pre></td></tr></table></figure>\n<p>一般情況下，我們會使用 <code>Lower</code> 和 <code>ToLower</code>  建立唯一索引和尋找數據。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> emailunique_idx <span class=\"keyword\">on</span> <span class=\"keyword\">users</span> (<span class=\"keyword\">LOWER</span>(email)); </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">LOWER</span>(email) = <span class=\"keyword\">LOWER</span>(?);</span><br></pre></td></tr></table></figure>\n<p>但這種做法，忘了加 <code>LOWER</code> 就會令程序產生 Bug.</p>\n<p>其實 PostgreSQL 供提不少額外的模塊，只是沒有預設啟用。這裹說的 <code>CITEXT</code> 就是其中一個。<code>CITEXT</code> 顧名思義就是 <code>case insensitive text</code>。</p>","keywords":null,"content":null,"text":"在PostgreSQL 上建立欄位約束，是很簡單的事情，<br><br><br><br>CREATE TABLE users (  <br>  id     uuid PRIMARY KEY NOT NULL DEFAULT uuid_generate_v4(),<br>  em","link":"","raw":null,"photos":["/2018/10/15/在PostgresSQL啟用不區分大小寫欄位/photo_2018-10-05_23-48-11.jpg"],"source":"_posts/2018/10/15-在PostgresSQL啟用不區分大小寫欄位.md","categories":[{"name":"SQL","slug":"SQL","count":2,"path":"api/categories/SQL.json"}],"tags":[]}]}