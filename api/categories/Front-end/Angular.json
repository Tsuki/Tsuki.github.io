{"name":"Angular","slug":"Front-end/Angular","count":1,"postlist":[{"_id":"cjix230pj0000rinojrjaa5s2","title":"Angular管理使用者登入狀態","slug":"Angular管理使用者登入狀態","date":"2018-06-27T18:30:40.000Z","updated":"2018-06-27T12:59:07.979Z","comments":true,"permalink":"/2018/06/27/Angular管理使用者登入狀態/","path":"api/articles/Angular管理使用者登入狀態.json","excerpt":"","keywords":null,"cover":null,"content":"<p>使用 Angular interceptor, guard 和 service 。</p>\n<p>Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。</p>\n<p>在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckStart, GuardsCheckStart 等額外階段。</p>\n<ol>\n<li><p>auth.service.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthService &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 追蹤 Gruard 並保存初始化 URL, 取得 URL 後取消訂閱以避免內存洩漏</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.events = <span class=\"keyword\">this</span>.router.events.subscribe(<span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (event <span class=\"keyword\">instanceof</span> GuardsCheckEnd &amp;&amp; event.shouldActivate === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initRoute.next(event.url);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.events.unsubscribe();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  events: Subscription;</span><br><span class=\"line\">  <span class=\"comment\">// 使用 BehaviorSubject 創建 Observable</span></span><br><span class=\"line\">  isLoginSubject = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">boolean</span>&gt;(<span class=\"literal\">false</span>);</span><br><span class=\"line\">  userInfo = &#123;&#125; <span class=\"keyword\">as</span> User;</span><br><span class=\"line\">  initRoute = <span class=\"keyword\">new</span> BehaviorSubject&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  login(info: LoginInfo): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.login(info).subscribe(<span class=\"function\"><span class=\"params\">next</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = next.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">''</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  logout(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.logout().subscribe();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>.userInfo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 刷新登陸狀態</span></span><br><span class=\"line\">  refresh(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cfpay.refresh().subscribe(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.userInfo = value.data;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.isLoginSubject.next(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  isLoggedIn(): Observable&lt;<span class=\"built_in\">boolean</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.isLoginSubject.asObservable();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>app.guard.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppGuard <span class=\"keyword\">implements</span> CanActivate &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> auth: AuthService, <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 以 Angular Guard 進行驗證</span></span><br><span class=\"line\">  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 因為每次驗證都是單一行為，所以不需要訂閱 Observable，只需要取最後的值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.auth.isLoginSubject.value) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>app-routing.module.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'login'</span>, component: LoginComponent&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在需要驗証 Route 的 canActivate 上加入己創建的Guard</span></span><br><span class=\"line\">  &#123;path: <span class=\"string\">''</span>, component: LayoutComponent, canActivate: [AppGuard]&#125;,</span><br><span class=\"line\">  &#123;path: <span class=\"string\">'**'</span>, component: NotfoundComponent&#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@NgModule</span>(&#123;</span><br><span class=\"line\">  imports: [RouterModule.forRoot(routes)],</span><br><span class=\"line\">  exports: [RouterModule]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppRoutingModule &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"4\">\n<li><p>AppComponent.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> router: Router</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">  </span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在主組件上初始化和重新取得登陸資料</span></span><br><span class=\"line\">  ngOnInit(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.refresh();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p>login.component.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> LoginComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> auth: AuthService,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> router: Router</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  loginInfo: LoginInfo = &#123;username: <span class=\"string\">''</span>, password: <span class=\"string\">''</span>&#125;;</span><br><span class=\"line\">  <span class=\"comment\">// 如果沒有登陸資料取消訂閱 Router event 以避免內存消耗</span></span><br><span class=\"line\">  ngOnInit() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.events.unsubscribe();</span><br><span class=\"line\">    <span class=\"comment\">// 在取得登陸資料後，跳轉到之前保存的地址上</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.isLoggedIn().subscribe(<span class=\"function\"><span class=\"params\">sub</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (sub) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.router.navigate([<span class=\"keyword\">this</span>.auth.initRoute.value]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  login() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.auth.login(<span class=\"keyword\">this</span>.loginInfo);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>​    </p>\n<ol start=\"6\">\n<li><p>auth.interceptor.ts</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AuthInterceptor <span class=\"keyword\">implements</span> HttpInterceptor &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">private</span> router: Router,</span></span><br><span class=\"line\"><span class=\"params\">              <span class=\"keyword\">private</span> auth: AuthService</span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  intercept(request: HttpRequest&lt;<span class=\"built_in\">any</span>&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;<span class=\"built_in\">any</span>&gt;&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Httpclient 後處理攔截器，在攔截器到 401/Unauthorized 跳回登陸頁面 </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> next.handle(request).pipe(tap(<span class=\"function\">(<span class=\"params\">_: HttpEvent&lt;<span class=\"built_in\">any</span>&gt;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    &#125;, <span class=\"function\">(<span class=\"params\">err: <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err <span class=\"keyword\">instanceof</span> HttpErrorResponse &amp;&amp; err.status === <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.auth.isLoginSubject.next(<span class=\"literal\">false</span>);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/login'</span>]).then();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","text":"使用 Angular interceptor, guard 和 service 。Gruard 是在 Angular 4.3或以上引入的權限和安全檢查的解決方案。在 Routing 上加入 Guard 令路由的 Lifecycle (生命週期) 加入 GuardsCheckSta","link":"","raw":null,"photos":["https://blog.sukitsuki.com/2018/06/27/Angular管理使用者登入狀態/photo_2018-06-19_10-38-44.jpg"],"source":"_posts/2018/06/27-Angular管理使用者登入狀態.md","categories":[{"name":"Front-end","slug":"Front-end","count":4,"path":"api/categories/Front-end.json"},{"name":"Angular","slug":"Front-end/Angular","count":1,"path":"api/categories/Front-end/Angular.json"}],"tags":[]}]}