{"name":"Golang","slug":"Golang","count":3,"postlist":[{"_id":"cjkm395sw0000trnj13oraw9g","title":"Golang 偽鑽石問題","slug":"Golang-Embedding-trap","date":"2018-08-09T11:59:09.000Z","updated":"2018-12-10T11:08:42.291Z","comments":true,"permalink":"/2018/08/09/Golang-Embedding-trap/","path":"api/articles/Golang-Embedding-trap.json","excerpt":"","keywords":null,"content":"<h1 id=\"Golang-偽鑽石問題\"><a href=\"#Golang-偽鑽石問題\" class=\"headerlink\" title=\"Golang 偽鑽石問題\"></a>Golang 偽鑽石問題</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">struct</span>&#123; buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">\tWriter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Writer:&#123;buffer:0&#125; Reader:&#123;buffer:0&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.buffer)</span><br><span class=\"line\">    <span class=\"comment\">// ambiguous selector rw.buffer</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 go 之中沒有實現真正的繼承，<code>rw.buffer</code> 只是一個語法糖，如果內嵌結构是匿名字段會自動提升。</p>\n<p>要取得 buffer 就需要指定 <code>rw.Reader.buffer</code> 或 <code>rw.Writer.buffer</code>.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Buffer <span class=\"keyword\">struct</span>&#123; Buffer <span class=\"keyword\">int</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">struct</span>&#123; Buffer &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ReadWriter <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tBuffer</span><br><span class=\"line\">\tReader</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rw ReadWriter</span><br><span class=\"line\">    <span class=\"comment\">// &#123;Buffer:&#123;Buffer:0&#125; Reader:&#123;Buffer:&#123;Buffer:0&#125;&#125;&#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%+v\"</span>, rw.Buffer)</span><br><span class=\"line\">    <span class=\"comment\">// &#123;int:0&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這種寫法就沒有鑽石問題，因為淺層己經有 <code>rw.Buffer</code>，所以 <code></code>rw.Reader.buffer` 不會自動提升。</p>\n<p>不過這種寫法非常不直觀，很容易引起混亂，查看代碼時會忘了拿的是那 <code>Buffer</code>。 所以這種情況下，還是盡量避免使用。</p>\n","text":"Golang 偽鑽石問題1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>type Reader struct&#123; buffer int &#125;<br>type Wr","link":"","raw":null,"photos":["/2018/08/09/Golang-Embedding-trap/cjkewjgb8018b8i5n1doqibdi.1200.jpg"],"source":"_posts/2018/08/09-Golang-Embedding-trap.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]},{"_id":"cjlenu7du0000u5ms981wunyh","title":"gorm兼容net.IP類","slug":"gorm兼容net-IP類","date":"2018-08-29T12:04:38.000Z","updated":"2018-08-29T06:37:22.933Z","comments":true,"permalink":"/2018/08/29/gorm兼容net-IP類/","path":"api/articles/gorm兼容net-IP類.json","excerpt":"","keywords":null,"content":"<p>首先 alias net.IP類到本地包，為之後實作方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> IP net.IP</span><br></pre></td></tr></table></figure>\n<p>因為pg不能直接使用<code>[]byte</code>作為輸入，所以需要實作<code>Value()</code>令Gorm 能轉換成字串作為輸入。</p>\n<p>先從自定義的 <code>IP</code> 類轉換回 <code>net.IP</code> 類，再用 <code>String()</code> 轉成字串。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a IP)</span> <span class=\"title\">Value</span><span class=\"params\">()</span> <span class=\"params\">(driver.Value, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> net.IP(a).String(), <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 別外，由於從pg 內讀取出來的是 <code>[]unit8</code> 類，內部數據是 ASIIC 碼，所以先轉換成 byte合併成 Array 再轉成 string.</p>\n<p> 最後用 net 庫內的 ParseIP 方法 轉成 IP 類，之後再 cast 成自定義的 IP 類 返回。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br><span class=\"line\" data-line-number=\"12\"></span><br><span class=\"line\" data-line-number=\"13\"></span><br><span class=\"line\" data-line-number=\"14\"></span><br><span class=\"line\" data-line-number=\"15\"></span><br><span class=\"line\" data-line-number=\"16\"></span><br><span class=\"line\" data-line-number=\"17\"></span><br><span class=\"line\" data-line-number=\"18\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> IP net.IP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a *IP)</span> <span class=\"title\">Scan</span><span class=\"params\">(src <span class=\"keyword\">interface</span>&#123;&#125;)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> x := src.(<span class=\"keyword\">type</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> []<span class=\"keyword\">uint8</span>:</span><br><span class=\"line\">\t\t*a = IP(net.ParseIP(<span class=\"keyword\">string</span>(x)))</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"literal\">nil</span>:</span><br><span class=\"line\">\t\t*a = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">\"pq: cannot convert %T to net.IP\"</span>, src)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(a IP)</span> <span class=\"title\">Value</span><span class=\"params\">()</span> <span class=\"params\">(driver.Value, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> net.IP(a).String(), <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"首先 alias net.IP類到本地包，為之後實作方法。<br>type IP net.IP<br>因為pg不能直接使用[]byte作為輸入，所以需要實作Value()令Gorm 能轉換成字串作為輸入。先從自定義的 IP 類轉換回 net.IP 類，再用 String() 轉成","link":"","raw":null,"photos":["/2018/08/29/gorm兼容net-IP類/photo_2018-08-29_12-08-58.jpg"],"source":"_posts/2018/08/29-gorm兼容net-IP類.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]},{"_id":"cjmklhtpp0000tsqjzf8qt81h","title":"Casbin-訪問權限控制工具","slug":"casbin-訪問權限控制工具","date":"2018-09-26T20:51:25.000Z","updated":"2018-09-27T13:08:43.994Z","comments":true,"permalink":"/2018/09/26/casbin-訪問權限控制工具/","path":"api/articles/casbin-訪問權限控制工具.json","excerpt":"","keywords":null,"content":"<p>Casbin 本質是一個配對的權限的工具庫，主要是由 model 模型和 policy 政策組成，</p>\n<p>model example</p>\n<p>r 是接受傳入的參數並定義欄位，例子中接受三項參數</p>\n<p>p 是解析 Prolicy 內容並定義欄位</p>\n<p>m 是配對 Policy 方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br><span class=\"line\" data-line-number=\"5\"></span><br><span class=\"line\" data-line-number=\"6\"></span><br><span class=\"line\" data-line-number=\"7\"></span><br><span class=\"line\" data-line-number=\"8\"></span><br><span class=\"line\" data-line-number=\"9\"></span><br><span class=\"line\" data-line-number=\"10\"></span><br><span class=\"line\" data-line-number=\"11\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[request_definition]</span><br><span class=\"line\">r = sub, obj, act</span><br><span class=\"line\"></span><br><span class=\"line\">[policy_definition]</span><br><span class=\"line\">p = sub, obj, act</span><br><span class=\"line\"></span><br><span class=\"line\">[policy_effect]</span><br><span class=\"line\">e = some(where (p.eft == allow))</span><br><span class=\"line\"></span><br><span class=\"line\">[matchers]</span><br><span class=\"line\">m = (p.sub in r.sub || p.sub == &quot;*&quot;) &amp;&amp; keyMatch(r.obj, p.obj) &amp;&amp; (r.act == p.act || p.act == &quot;*&quot;)</span><br></pre></td></tr></table></figure>\n<p>policy example </p>\n<p>ps:雖然是csv格式 但需要在逗號後留空白，別外內容的空白是會保留，不要因為對齊而加padding</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\" data-line-number=\"1\"></span><br><span class=\"line\" data-line-number=\"2\"></span><br><span class=\"line\" data-line-number=\"3\"></span><br><span class=\"line\" data-line-number=\"4\"></span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p, *, /info, GET</span><br><span class=\"line\">p, user, /users, GET</span><br><span class=\"line\">p, user, /users, POST</span><br><span class=\"line\">p, setting, /settings, *</span><br></pre></td></tr></table></figure>\n","text":"Casbin 本質是一個配對的權限的工具庫，主要是由 model 模型和 policy 政策組成，model exampler 是接受傳入的參數並定義欄位，例子中接受三項參數p 是解析 Prolicy 內容並定義欄位m 是配對 Policy 方式<br><br><br><br><","link":"","raw":null,"photos":["/2018/09/26/casbin-訪問權限控制工具/anime-love-live-sunshine-a9-1280x720.jpg"],"source":"_posts/2018/09/26-casbin-訪問權限控制工具.md","categories":[{"name":"Golang","slug":"Golang","count":3,"path":"api/categories/Golang.json"}],"tags":[]}]}